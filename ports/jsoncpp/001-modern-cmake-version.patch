diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2841277..d0ac084 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,44 +1,4 @@
-# vim: et ts=4 sts=4 sw=4 tw=0
-
-# ==== Define cmake build policies that affect compilation and linkage default behaviors
-#
-# Set the JSONCPP_NEWEST_VALIDATED_POLICIES_VERSION string to the newest cmake version
-# policies that provide successful builds. By setting JSONCPP_NEWEST_VALIDATED_POLICIES_VERSION
-# to a value greater than the oldest policies, all policies between
-# JSONCPP_OLDEST_VALIDATED_POLICIES_VERSION and CMAKE_VERSION (used for this build)
-# are set to their NEW behaivor, thereby suppressing policy warnings related to policies
-# between the JSONCPP_OLDEST_VALIDATED_POLICIES_VERSION and CMAKE_VERSION.
-#
-# CMake versions greater than the JSONCPP_NEWEST_VALIDATED_POLICIES_VERSION policies will
-# continue to generate policy warnings "CMake Warning (dev)...Policy CMP0XXX is not set:"
-#
-set(JSONCPP_OLDEST_VALIDATED_POLICIES_VERSION "3.8.0")
-set(JSONCPP_NEWEST_VALIDATED_POLICIES_VERSION "3.13.2")
-cmake_minimum_required(VERSION ${JSONCPP_OLDEST_VALIDATED_POLICIES_VERSION})
-if("${CMAKE_VERSION}" VERSION_LESS "${JSONCPP_NEWEST_VALIDATED_POLICIES_VERSION}")
-    #Set and use the newest available cmake policies that are validated to work
-    set(JSONCPP_CMAKE_POLICY_VERSION "${CMAKE_VERSION}")
-else()
-    set(JSONCPP_CMAKE_POLICY_VERSION "${JSONCPP_NEWEST_VALIDATED_POLICIES_VERSION}")
-endif()
-cmake_policy(VERSION ${JSONCPP_CMAKE_POLICY_VERSION})
-if(POLICY CMP0091)
-    cmake_policy(SET CMP0091 NEW)
-endif()
-#
-# Now enumerate specific policies newer than JSONCPP_NEWEST_VALIDATED_POLICIES_VERSION
-# that may need to be individually set to NEW/OLD
-#
-foreach(pnew "") # Currently Empty
-    if(POLICY ${pnew})
-        cmake_policy(SET ${pnew} NEW)
-    endif()
-endforeach()
-foreach(pold "") # Currently Empty
-    if(POLICY ${pold})
-        cmake_policy(SET ${pold} OLD)
-    endif()
-endforeach()
+cmake_minimum_required(VERSION 3.22)
 
 # Build the library with C++11 standard support, independent from other including
 # software which may use a different CXX_STANDARD or CMAKE_CXX_STANDARD.
diff --git a/jsoncppConfig.cmake.in b/jsoncppConfig.cmake.in
index 76570bc..4eda9e9 100644
--- a/jsoncppConfig.cmake.in
+++ b/jsoncppConfig.cmake.in
@@ -1,11 +1,6 @@
-cmake_policy(PUSH)
-cmake_policy(VERSION 3.0)
-
 @PACKAGE_INIT@
 
-include ( "${CMAKE_CURRENT_LIST_DIR}/jsoncpp-targets.cmake" )
-include ( "${CMAKE_CURRENT_LIST_DIR}/jsoncpp-namespaced-targets.cmake" )
-
-check_required_components(JsonCpp)
+include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake")
+include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-namespaced-targets.cmake")
 
-cmake_policy(POP)
+check_required_components(@PROJECT_NAME@)
