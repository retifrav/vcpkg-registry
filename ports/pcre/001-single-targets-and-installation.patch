diff --git a/CMakeLists.txt b/CMakeLists.txt
index 9e916174..8d5d8572 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -112,14 +112,21 @@
 ################################################################################
 
 # Increased minimum to 3.15 to allow use of string(REPEAT).
-cmake_minimum_required(VERSION 3.15 FATAL_ERROR)
-project(PCRE2 C)
+cmake_minimum_required(VERSION 3.22)
+
+project(pcre
+    LANGUAGES C
+    VERSION 10.45.0
+)
+
 set(CMAKE_C_STANDARD 99)
 set(CMAKE_C_STANDARD_REQUIRED TRUE)
 
 set(CMAKE_C_VISIBILITY_PRESET hidden)
 cmake_policy(SET CMP0063 NEW)
 
+set(CMAKE_DEBUG_POSTFIX "d" CACHE STRING "Filename postfix for libraries under DEBUG configuration")
+
 # Set policy CMP0026 to avoid warnings for the use of LOCATION in
 # GET_TARGET_PROPERTY. This should no longer be required.
 # CMAKE_POLICY(SET CMP0026 OLD)
@@ -137,12 +144,6 @@ list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
 
 include_directories(${PROJECT_SOURCE_DIR}/src)
 
-# external packages
-find_package(BZip2)
-find_package(ZLIB)
-find_package(Readline)
-find_package(Editline)
-
 # Configuration checks
 
 include(CheckCSourceCompiles)
@@ -351,12 +352,12 @@ option(PCRE2_SHOW_REPORT "Show the final configuration report" ON)
 option(PCRE2_BUILD_PCRE2GREP "Build pcre2grep" ON)
 option(PCRE2_BUILD_TESTS "Build the tests" ON)
 
-set(
-  PCRE2_INSTALL_CMAKEDIR
-  "${CMAKE_INSTALL_LIBDIR}/cmake/pcre2"
-  CACHE STRING
-  "Path used during CMake install for placing PCRE2's CMake config files, relative to the installation root (prefix)"
-)
+if(PCRE2_BUILD_PCRE2GREP)
+    find_package(BZip2 REQUIRED)
+    find_package(ZLIB REQUIRED)
+    find_package(Readline REQUIRED)
+    find_package(Editline REQUIRED)
+endif()
 
 if(MINGW)
   option(
@@ -644,12 +645,6 @@ parse_lib_version(LIBPCRE2_32)
 
 configure_file(src/pcre2.h.in ${PROJECT_BINARY_DIR}/pcre2.h @ONLY)
 
-# Make sure to not link debug libs
-# against release libs and vice versa
-if(WIN32)
-  set(CMAKE_DEBUG_POSTFIX "d")
-endif()
-
 # Character table generation
 
 option(PCRE2_REBUILD_CHARTABLES "Rebuild char tables" OFF)
@@ -780,9 +775,9 @@ set(TARGETS)
 
 if(PCRE2_BUILD_PCRE2_8)
   if(BUILD_STATIC_LIBS)
-    add_library(pcre2-8-static STATIC ${PCRE2_HEADERS} ${PCRE2_SOURCES} ${PROJECT_BINARY_DIR}/config.h)
+    add_library(pcre2-8 STATIC ${PCRE2_HEADERS} ${PCRE2_SOURCES} ${PROJECT_BINARY_DIR}/config.h)
     set_target_properties(
-      pcre2-8-static
+      pcre2-8
       PROPERTIES
         COMPILE_DEFINITIONS PCRE2_CODE_UNIT_WIDTH=8
         MACHO_COMPATIBILITY_VERSION "${LIBPCRE2_8_MACHO_COMPATIBILITY_VERSION}"
@@ -790,15 +785,15 @@ if(PCRE2_BUILD_PCRE2_8)
         VERSION ${LIBPCRE2_8_VERSION}
         SOVERSION ${LIBPCRE2_8_SOVERSION}
     )
-    target_compile_definitions(pcre2-8-static PUBLIC PCRE2_STATIC)
-    target_include_directories(pcre2-8-static PUBLIC ${PROJECT_BINARY_DIR})
+    target_compile_definitions(pcre2-8 PUBLIC PCRE2_STATIC)
+    target_include_directories(pcre2-8 PUBLIC $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
     if(REQUIRE_PTHREAD)
-      target_link_libraries(pcre2-8-static Threads::Threads)
+      target_link_libraries(pcre2-8 Threads::Threads)
     endif()
-    set(TARGETS ${TARGETS} pcre2-8-static)
-    add_library(pcre2-posix-static STATIC ${PCRE2POSIX_HEADERS} ${PCRE2POSIX_SOURCES})
+    set(TARGETS ${TARGETS} pcre2-8)
+    add_library(pcre2-posix STATIC ${PCRE2POSIX_HEADERS} ${PCRE2POSIX_SOURCES})
     set_target_properties(
-      pcre2-posix-static
+      pcre2-posix
       PROPERTIES
         COMPILE_DEFINITIONS PCRE2_CODE_UNIT_WIDTH=8
         MACHO_COMPATIBILITY_VERSION "${LIBPCRE2_POSIX_MACHO_COMPATIBILITY_VERSION}"
@@ -806,27 +801,27 @@ if(PCRE2_BUILD_PCRE2_8)
         VERSION ${LIBPCRE2_POSIX_VERSION}
         SOVERSION ${LIBPCRE2_POSIX_SOVERSION}
     )
-    target_link_libraries(pcre2-posix-static pcre2-8-static)
-    target_include_directories(pcre2-posix-static PUBLIC ${PROJECT_SOURCE_DIR}/src)
-    set(TARGETS ${TARGETS} pcre2-posix-static)
+    target_link_libraries(pcre2-posix pcre2-8)
+    target_include_directories(pcre2-posix PUBLIC $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
+    set(TARGETS ${TARGETS} pcre2-posix)
 
     if(MSVC)
-      set_target_properties(pcre2-8-static PROPERTIES OUTPUT_NAME pcre2-8-static)
-      set_target_properties(pcre2-posix-static PROPERTIES OUTPUT_NAME pcre2-posix-static)
+      set_target_properties(pcre2-8 PROPERTIES OUTPUT_NAME pcre2-8)
+      set_target_properties(pcre2-posix PROPERTIES OUTPUT_NAME pcre2-posix)
     else()
-      set_target_properties(pcre2-8-static PROPERTIES OUTPUT_NAME pcre2-8)
-      set_target_properties(pcre2-posix-static PROPERTIES OUTPUT_NAME pcre2-posix)
+      set_target_properties(pcre2-8 PROPERTIES OUTPUT_NAME pcre2-8)
+      set_target_properties(pcre2-posix PROPERTIES OUTPUT_NAME pcre2-posix)
     endif()
     if(PCRE2_STATIC_PIC)
-      set_target_properties(pcre2-8-static pcre2-posix-static PROPERTIES POSITION_INDEPENDENT_CODE 1)
+      set_target_properties(pcre2-8 pcre2-posix PROPERTIES POSITION_INDEPENDENT_CODE 1)
     endif()
   endif()
 
   if(BUILD_SHARED_LIBS)
-    add_library(pcre2-8-shared SHARED ${PCRE2_HEADERS} ${PCRE2_SOURCES} ${PROJECT_BINARY_DIR}/config.h)
-    target_include_directories(pcre2-8-shared PUBLIC ${PROJECT_BINARY_DIR})
+    add_library(pcre2-8 SHARED ${PCRE2_HEADERS} ${PCRE2_SOURCES} ${PROJECT_BINARY_DIR}/config.h)
+    target_include_directories(pcre2-8 PUBLIC $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
     set_target_properties(
-      pcre2-8-shared
+      pcre2-8
       PROPERTIES
         COMPILE_DEFINITIONS PCRE2_CODE_UNIT_WIDTH=8
         MACHO_COMPATIBILITY_VERSION "${LIBPCRE2_8_MACHO_COMPATIBILITY_VERSION}"
@@ -836,16 +831,16 @@ if(PCRE2_BUILD_PCRE2_8)
         OUTPUT_NAME pcre2-8
     )
     if(REQUIRE_PTHREAD)
-      target_link_libraries(pcre2-8-shared Threads::Threads)
+      target_link_libraries(pcre2-8 Threads::Threads)
     endif()
-    set(TARGETS ${TARGETS} pcre2-8-shared)
-    set(DLL_PDB_FILES $<TARGET_PDB_FILE_DIR:pcre2-8-shared>/pcre2-8.pdb ${DLL_PDB_FILES})
-    set(DLL_PDB_DEBUG_FILES $<TARGET_PDB_FILE_DIR:pcre2-8-shared>/pcre2-8d.pdb ${DLL_PDB_DEBUG_FILES})
+    set(TARGETS ${TARGETS} pcre2-8)
+    set(DLL_PDB_FILES $<TARGET_PDB_FILE_DIR:pcre2-8>/pcre2-8.pdb ${DLL_PDB_FILES})
+    set(DLL_PDB_DEBUG_FILES $<TARGET_PDB_FILE_DIR:pcre2-8>/pcre2-8d.pdb ${DLL_PDB_DEBUG_FILES})
 
-    add_library(pcre2-posix-shared SHARED ${PCRE2POSIX_HEADERS} ${PCRE2POSIX_SOURCES})
-    target_include_directories(pcre2-posix-shared PUBLIC ${PROJECT_SOURCE_DIR}/src)
+    add_library(pcre2-posix SHARED ${PCRE2POSIX_HEADERS} ${PCRE2POSIX_SOURCES})
+    target_include_directories(pcre2-posix PUBLIC $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
     set_target_properties(
-      pcre2-posix-shared
+      pcre2-posix
       PROPERTIES
         COMPILE_DEFINITIONS PCRE2_CODE_UNIT_WIDTH=8
         MACHO_COMPATIBILITY_VERSION "${LIBPCRE2_POSIX_MACHO_COMPATIBILITY_VERSION}"
@@ -855,39 +850,31 @@ if(PCRE2_BUILD_PCRE2_8)
         OUTPUT_NAME pcre2-posix
     )
     set(PCRE2POSIX_CFLAG "-DPCRE2POSIX_SHARED")
-    target_compile_definitions(pcre2-posix-shared PUBLIC ${PCRE2POSIX_CFLAG})
-    target_link_libraries(pcre2-posix-shared pcre2-8-shared)
-    set(TARGETS ${TARGETS} pcre2-posix-shared)
-    set(DLL_PDB_FILES $<TARGET_PDB_FILE_DIR:pcre2-posix-shared>/pcre2-posix.pdb ${DLL_PDB_FILES})
-    set(DLL_PDB_DEBUG_FILES $<TARGET_PDB_FILE_DIR:pcre2-posix-shared>/pcre2-posixd.pdb ${DLL_PDB_DEBUG_FILES})
+    target_compile_definitions(pcre2-posix PUBLIC ${PCRE2POSIX_CFLAG})
+    target_link_libraries(pcre2-posix pcre2-8)
+    set(TARGETS ${TARGETS} pcre2-posix)
+    set(DLL_PDB_FILES $<TARGET_PDB_FILE_DIR:pcre2-posix>/pcre2-posix.pdb ${DLL_PDB_FILES})
+    set(DLL_PDB_DEBUG_FILES $<TARGET_PDB_FILE_DIR:pcre2-posix>/pcre2-posixd.pdb ${DLL_PDB_DEBUG_FILES})
 
     if(MINGW)
       if(NON_STANDARD_LIB_PREFIX)
-        set_target_properties(pcre2-8-shared pcre2-posix-shared PROPERTIES PREFIX "")
+        set_target_properties(pcre2-8 pcre2-posix PROPERTIES PREFIX "")
       endif()
       if(NON_STANDARD_LIB_SUFFIX)
-        set_target_properties(pcre2-8-shared pcre2-posix-shared PROPERTIES SUFFIX "-0.dll")
+        set_target_properties(pcre2-8 pcre2-posix PROPERTIES SUFFIX "-0.dll")
       endif()
     endif()
   endif()
-
-  if(BUILD_STATIC_LIBS)
-    add_library(pcre2-8 ALIAS pcre2-8-static)
-    add_library(pcre2-posix ALIAS pcre2-posix-static)
-  else()
-    add_library(pcre2-8 ALIAS pcre2-8-shared)
-    add_library(pcre2-posix ALIAS pcre2-posix-shared)
-  endif()
 endif()
 
 # 16-bit library
 
 if(PCRE2_BUILD_PCRE2_16)
   if(BUILD_STATIC_LIBS)
-    add_library(pcre2-16-static STATIC ${PCRE2_HEADERS} ${PCRE2_SOURCES} ${PROJECT_BINARY_DIR}/config.h)
-    target_include_directories(pcre2-16-static PUBLIC ${PROJECT_BINARY_DIR})
+    add_library(pcre2-16 STATIC ${PCRE2_HEADERS} ${PCRE2_SOURCES} ${PROJECT_BINARY_DIR}/config.h)
+    target_include_directories(pcre2-16 PUBLIC $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
     set_target_properties(
-      pcre2-16-static
+      pcre2-16
       PROPERTIES
         UNITY_BUILD OFF
         COMPILE_DEFINITIONS PCRE2_CODE_UNIT_WIDTH=16
@@ -896,27 +883,27 @@ if(PCRE2_BUILD_PCRE2_16)
         VERSION ${LIBPCRE2_16_VERSION}
         SOVERSION ${LIBPCRE2_16_SOVERSION}
     )
-    target_compile_definitions(pcre2-16-static PUBLIC PCRE2_STATIC)
+    target_compile_definitions(pcre2-16 PUBLIC PCRE2_STATIC)
     if(REQUIRE_PTHREAD)
-      target_link_libraries(pcre2-16-static Threads::Threads)
+      target_link_libraries(pcre2-16 Threads::Threads)
     endif()
-    set(TARGETS ${TARGETS} pcre2-16-static)
+    set(TARGETS ${TARGETS} pcre2-16)
 
     if(MSVC)
-      set_target_properties(pcre2-16-static PROPERTIES OUTPUT_NAME pcre2-16-static)
+      set_target_properties(pcre2-16 PROPERTIES OUTPUT_NAME pcre2-16)
     else()
-      set_target_properties(pcre2-16-static PROPERTIES OUTPUT_NAME pcre2-16)
+      set_target_properties(pcre2-16 PROPERTIES OUTPUT_NAME pcre2-16)
     endif()
     if(PCRE2_STATIC_PIC)
-      set_target_properties(pcre2-16-static PROPERTIES POSITION_INDEPENDENT_CODE 1)
+      set_target_properties(pcre2-16 PROPERTIES POSITION_INDEPENDENT_CODE 1)
     endif()
   endif()
 
   if(BUILD_SHARED_LIBS)
-    add_library(pcre2-16-shared SHARED ${PCRE2_HEADERS} ${PCRE2_SOURCES} ${PROJECT_BINARY_DIR}/config.h)
-    target_include_directories(pcre2-16-shared PUBLIC ${PROJECT_BINARY_DIR})
+    add_library(pcre2-16 SHARED ${PCRE2_HEADERS} ${PCRE2_SOURCES} ${PROJECT_BINARY_DIR}/config.h)
+    target_include_directories(pcre2-16 PUBLIC $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
     set_target_properties(
-      pcre2-16-shared
+      pcre2-16
       PROPERTIES
         UNITY_BUILD OFF
         COMPILE_DEFINITIONS PCRE2_CODE_UNIT_WIDTH=16
@@ -927,37 +914,31 @@ if(PCRE2_BUILD_PCRE2_16)
         OUTPUT_NAME pcre2-16
     )
     if(REQUIRE_PTHREAD)
-      target_link_libraries(pcre2-16-shared Threads::Threads)
+      target_link_libraries(pcre2-16 Threads::Threads)
     endif()
-    set(TARGETS ${TARGETS} pcre2-16-shared)
-    set(DLL_PDB_FILES $<TARGET_PDB_FILE_DIR:pcre2-16-shared>/pcre2-16.pdb ${DLL_PDB_FILES})
-    set(DLL_PDB_DEBUG_FILES $<TARGET_PDB_FILE_DIR:pcre2-16-shared>/pcre2-16d.pdb ${DLL_PDB_DEBUG_FILES})
+    set(TARGETS ${TARGETS} pcre2-16)
+    set(DLL_PDB_FILES $<TARGET_PDB_FILE_DIR:pcre2-16>/pcre2-16.pdb ${DLL_PDB_FILES})
+    set(DLL_PDB_DEBUG_FILES $<TARGET_PDB_FILE_DIR:pcre2-16>/pcre2-16d.pdb ${DLL_PDB_DEBUG_FILES})
 
     if(MINGW)
       if(NON_STANDARD_LIB_PREFIX)
-        set_target_properties(pcre2-16-shared PROPERTIES PREFIX "")
+        set_target_properties(pcre2-16 PROPERTIES PREFIX "")
       endif()
       if(NON_STANDARD_LIB_SUFFIX)
-        set_target_properties(pcre2-16-shared PROPERTIES SUFFIX "-0.dll")
+        set_target_properties(pcre2-16 PROPERTIES SUFFIX "-0.dll")
       endif()
     endif()
   endif()
-
-  if(BUILD_STATIC_LIBS)
-    add_library(pcre2-16 ALIAS pcre2-16-static)
-  else()
-    add_library(pcre2-16 ALIAS pcre2-16-shared)
-  endif()
 endif()
 
 # 32-bit library
 
 if(PCRE2_BUILD_PCRE2_32)
   if(BUILD_STATIC_LIBS)
-    add_library(pcre2-32-static STATIC ${PCRE2_HEADERS} ${PCRE2_SOURCES} ${PROJECT_BINARY_DIR}/config.h)
-    target_include_directories(pcre2-32-static PUBLIC ${PROJECT_BINARY_DIR})
+    add_library(pcre2-32 STATIC ${PCRE2_HEADERS} ${PCRE2_SOURCES} ${PROJECT_BINARY_DIR}/config.h)
+    target_include_directories(pcre2-32 PUBLIC $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
     set_target_properties(
-      pcre2-32-static
+      pcre2-32
       PROPERTIES
         UNITY_BUILD OFF
         COMPILE_DEFINITIONS PCRE2_CODE_UNIT_WIDTH=32
@@ -966,27 +947,27 @@ if(PCRE2_BUILD_PCRE2_32)
         VERSION ${LIBPCRE2_32_VERSION}
         SOVERSION ${LIBPCRE2_32_SOVERSION}
     )
-    target_compile_definitions(pcre2-32-static PUBLIC PCRE2_STATIC)
+    target_compile_definitions(pcre2-32 PUBLIC PCRE2_STATIC)
     if(REQUIRE_PTHREAD)
-      target_link_libraries(pcre2-32-static Threads::Threads)
+      target_link_libraries(pcre2-32 Threads::Threads)
     endif()
-    set(TARGETS ${TARGETS} pcre2-32-static)
+    set(TARGETS ${TARGETS} pcre2-32)
 
     if(MSVC)
-      set_target_properties(pcre2-32-static PROPERTIES OUTPUT_NAME pcre2-32-static)
+      set_target_properties(pcre2-32 PROPERTIES OUTPUT_NAME pcre2-32)
     else()
-      set_target_properties(pcre2-32-static PROPERTIES OUTPUT_NAME pcre2-32)
+      set_target_properties(pcre2-32 PROPERTIES OUTPUT_NAME pcre2-32)
     endif()
     if(PCRE2_STATIC_PIC)
-      set_target_properties(pcre2-32-static PROPERTIES POSITION_INDEPENDENT_CODE 1)
+      set_target_properties(pcre2-32 PROPERTIES POSITION_INDEPENDENT_CODE 1)
     endif()
   endif()
 
   if(BUILD_SHARED_LIBS)
-    add_library(pcre2-32-shared SHARED ${PCRE2_HEADERS} ${PCRE2_SOURCES} ${PROJECT_BINARY_DIR}/config.h)
-    target_include_directories(pcre2-32-shared PUBLIC ${PROJECT_BINARY_DIR})
+    add_library(pcre2-32 SHARED ${PCRE2_HEADERS} ${PCRE2_SOURCES} ${PROJECT_BINARY_DIR}/config.h)
+    target_include_directories(pcre2-32 PUBLIC $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
     set_target_properties(
-      pcre2-32-shared
+      pcre2-32
       PROPERTIES
         UNITY_BUILD OFF
         COMPILE_DEFINITIONS PCRE2_CODE_UNIT_WIDTH=32
@@ -997,27 +978,21 @@ if(PCRE2_BUILD_PCRE2_32)
         OUTPUT_NAME pcre2-32
     )
     if(REQUIRE_PTHREAD)
-      target_link_libraries(pcre2-32-shared Threads::Threads)
+      target_link_libraries(pcre2-32 Threads::Threads)
     endif()
-    set(TARGETS ${TARGETS} pcre2-32-shared)
-    set(DLL_PDB_FILES $<TARGET_PDB_FILE_DIR:pcre2-32-shared>/pcre2-32.pdb ${DLL_PDB_FILES})
-    set(DLL_PDB_DEBUG_FILES $<TARGET_PDB_FILE_DIR:pcre2-32-shared>/pcre2-32d.pdb ${DLL_PDB_DEBUG_FILES})
+    set(TARGETS ${TARGETS} pcre2-32)
+    set(DLL_PDB_FILES $<TARGET_PDB_FILE_DIR:pcre2-32>/pcre2-32.pdb ${DLL_PDB_FILES})
+    set(DLL_PDB_DEBUG_FILES $<TARGET_PDB_FILE_DIR:pcre2-32>/pcre2-32d.pdb ${DLL_PDB_DEBUG_FILES})
 
     if(MINGW)
       if(NON_STANDARD_LIB_PREFIX)
-        set_target_properties(pcre2-32-shared PROPERTIES PREFIX "")
+        set_target_properties(pcre2-32 PROPERTIES PREFIX "")
       endif()
       if(NON_STANDARD_LIB_SUFFIX)
-        set_target_properties(pcre2-32-shared PROPERTIES SUFFIX "-0.dll")
+        set_target_properties(pcre2-32 PROPERTIES SUFFIX "-0.dll")
       endif()
     endif()
   endif()
-
-  if(BUILD_STATIC_LIBS)
-    add_library(pcre2-32 ALIAS pcre2-32-static)
-  else()
-    add_library(pcre2-32 ALIAS pcre2-32-shared)
-  endif()
 endif()
 
 # Generate pkg-config files
@@ -1027,9 +1002,6 @@ set(prefix ${CMAKE_INSTALL_PREFIX})
 set(exec_prefix "\${prefix}")
 set(libdir "\${exec_prefix}/${CMAKE_INSTALL_LIBDIR}")
 set(includedir "\${prefix}/include")
-if(WIN32 AND (CMAKE_BUILD_TYPE MATCHES Debug))
-  set(LIB_POSTFIX ${CMAKE_DEBUG_POSTFIX})
-endif()
 
 if(PCRE2_BUILD_PCRE2_8)
   configure_file(libpcre2-posix.pc.in libpcre2-posix.pc @ONLY)
@@ -1057,8 +1029,6 @@ else()
   set(enable_pcre2_32 "no")
 endif()
 
-configure_file(pcre2-config.in pcre2-config @ONLY NEWLINE_STYLE LF)
-
 # Executables
 
 if(PCRE2_BUILD_PCRE2GREP)
@@ -1239,52 +1209,36 @@ endif()
 
 # Installation
 
-set(CMAKE_INSTALL_ALWAYS 1)
-
 install(
   TARGETS ${TARGETS}
-  RUNTIME DESTINATION bin
-  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
+  EXPORT "${PROJECT_NAME}Targets"
 )
-install(FILES ${pkg_config_files} DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
-install(
-  FILES "${CMAKE_CURRENT_BINARY_DIR}/pcre2-config"
-  DESTINATION bin
-  # Set 0755 permissions
-  PERMISSIONS OWNER_WRITE OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
+install(EXPORT "${PROJECT_NAME}Targets"
+    FILE "${PROJECT_NAME}Targets.cmake"
+    NAMESPACE "${PROJECT_NAME}::"
+    DESTINATION "share/${PROJECT_NAME}"
 )
+install(FILES ${pkg_config_files} DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
 
-install(FILES ${PCRE2_HEADERS} ${PCRE2POSIX_HEADERS} DESTINATION include)
-
-# CMake config files.
-set(PCRE2_CONFIG_IN ${CMAKE_CURRENT_SOURCE_DIR}/cmake/pcre2-config.cmake.in)
-set(PCRE2_CONFIG_OUT ${CMAKE_CURRENT_BINARY_DIR}/cmake/pcre2-config.cmake)
-configure_file(${PCRE2_CONFIG_IN} ${PCRE2_CONFIG_OUT} @ONLY)
-set(PCRE2_CONFIG_VERSION_IN ${CMAKE_CURRENT_SOURCE_DIR}/cmake/pcre2-config-version.cmake.in)
-set(PCRE2_CONFIG_VERSION_OUT ${CMAKE_CURRENT_BINARY_DIR}/cmake/pcre2-config-version.cmake)
-configure_file(${PCRE2_CONFIG_VERSION_IN} ${PCRE2_CONFIG_VERSION_OUT} @ONLY)
-install(FILES ${PCRE2_CONFIG_OUT} ${PCRE2_CONFIG_VERSION_OUT} DESTINATION "${PCRE2_INSTALL_CMAKEDIR}")
-
-file(GLOB html ${PROJECT_SOURCE_DIR}/doc/html/*.html ${PROJECT_SOURCE_DIR}/doc/html/*.txt)
-file(
-  GLOB txts
-  ${PROJECT_SOURCE_DIR}/doc/*.txt
-  AUTHORS.md
-  COPYING
-  ChangeLog
-  LICENCE.md
-  NEWS
-  README
-  SECURITY.md
+install(FILES ${PCRE2_HEADERS} ${PCRE2POSIX_HEADERS}
+    DESTINATION "include/${PROJECT_NAME}"
 )
-file(GLOB man1 ${PROJECT_SOURCE_DIR}/doc/*.1)
-file(GLOB man3 ${PROJECT_SOURCE_DIR}/doc/*.3)
 
-install(FILES ${man1} DESTINATION ${CMAKE_INSTALL_MANDIR}/man1)
-install(FILES ${man3} DESTINATION ${CMAKE_INSTALL_MANDIR}/man3)
-install(FILES ${txts} DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/pcre2)
-install(FILES ${html} DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/pcre2/html)
+include(CMakePackageConfigHelpers)
+write_basic_package_version_file(
+    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
+    COMPATIBILITY AnyNewerVersion
+)
+configure_package_config_file(
+    "${CMAKE_CURRENT_SOURCE_DIR}/Config.cmake.in"
+    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
+    INSTALL_DESTINATION "share/${PROJECT_NAME}"
+)
+install(FILES
+    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
+    "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}ConfigVersion.cmake"
+    DESTINATION "share/${PROJECT_NAME}"
+)
 
 if(MSVC AND INSTALL_MSVC_PDB)
   install(FILES ${DLL_PDB_FILES} DESTINATION bin CONFIGURATIONS RelWithDebInfo)
diff --git a/cmake/pcre2-config-version.cmake.in b/cmake/pcre2-config-version.cmake.in
deleted file mode 100644
index db006063..00000000
--- a/cmake/pcre2-config-version.cmake.in
+++ /dev/null
@@ -1,14 +0,0 @@
-set(PACKAGE_VERSION_MAJOR @PCRE2_MAJOR@)
-set(PACKAGE_VERSION_MINOR @PCRE2_MINOR@)
-set(PACKAGE_VERSION_PATCH 0)
-set(PACKAGE_VERSION @PCRE2_MAJOR@.@PCRE2_MINOR@.0)
-
-# Check whether the requested PACKAGE_FIND_VERSION is compatible
-if(PACKAGE_VERSION VERSION_LESS PACKAGE_FIND_VERSION OR PACKAGE_VERSION_MAJOR GREATER PACKAGE_FIND_VERSION_MAJOR)
-  set(PACKAGE_VERSION_COMPATIBLE FALSE)
-else()
-  set(PACKAGE_VERSION_COMPATIBLE TRUE)
-  if(PACKAGE_VERSION VERSION_EQUAL PACKAGE_FIND_VERSION)
-    set(PACKAGE_VERSION_EXACT TRUE)
-  endif()
-endif()
diff --git a/cmake/pcre2-config.cmake.in b/cmake/pcre2-config.cmake.in
deleted file mode 100644
index 082dc198..00000000
--- a/cmake/pcre2-config.cmake.in
+++ /dev/null
@@ -1,168 +0,0 @@
-# pcre2-config.cmake
-# ----------------
-#
-# Finds the PCRE2 library, specify the starting search path in PCRE2_ROOT.
-#
-# Static vs. shared
-# -----------------
-# To make use of the static library instead of the shared one, one needs
-# to set the variable PCRE2_USE_STATIC_LIBS to ON before calling find_package.
-# Example:
-#   set(PCRE2_USE_STATIC_LIBS ON)
-#   find_package(PCRE2 CONFIG COMPONENTS 8BIT)
-#
-# This will define the following variables:
-#
-#   PCRE2_FOUND   - True if the system has the PCRE2 library.
-#   PCRE2_VERSION - The version of the PCRE2 library which was found.
-#
-# and the following imported targets:
-#
-#   PCRE2::8BIT  - The 8 bit PCRE2 library.
-#   PCRE2::16BIT - The 16 bit PCRE2 library.
-#   PCRE2::32BIT - The 32 bit PCRE2 library.
-#   PCRE2::POSIX - The POSIX PCRE2 library.
-
-set(PCRE2_NON_STANDARD_LIB_PREFIX @NON_STANDARD_LIB_PREFIX@)
-set(PCRE2_NON_STANDARD_LIB_SUFFIX @NON_STANDARD_LIB_SUFFIX@)
-set(PCRE2_8BIT_NAME pcre2-8)
-set(PCRE2_16BIT_NAME pcre2-16)
-set(PCRE2_32BIT_NAME pcre2-32)
-set(PCRE2_POSIX_NAME pcre2-posix)
-find_path(PCRE2_INCLUDE_DIR NAMES pcre2.h DOC "PCRE2 include directory")
-if(PCRE2_USE_STATIC_LIBS)
-  if(MSVC)
-    set(PCRE2_8BIT_NAME pcre2-8-static)
-    set(PCRE2_16BIT_NAME pcre2-16-static)
-    set(PCRE2_32BIT_NAME pcre2-32-static)
-    set(PCRE2_POSIX_NAME pcre2-posix-static)
-  endif()
-
-  set(PCRE2_PREFIX ${CMAKE_STATIC_LIBRARY_PREFIX})
-  set(PCRE2_SUFFIX ${CMAKE_STATIC_LIBRARY_SUFFIX})
-else()
-  set(PCRE2_PREFIX ${CMAKE_SHARED_LIBRARY_PREFIX})
-  if(MINGW AND PCRE2_NON_STANDARD_LIB_PREFIX)
-    set(PCRE2_PREFIX "")
-  endif()
-
-  set(PCRE2_SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX})
-  if(MINGW AND PCRE2_NON_STANDARD_LIB_SUFFIX)
-    set(PCRE2_SUFFIX "-0.dll")
-  elseif(MSVC)
-    set(PCRE2_SUFFIX ${CMAKE_STATIC_LIBRARY_SUFFIX})
-  endif()
-endif()
-find_library(
-  PCRE2_8BIT_LIBRARY
-  NAMES ${PCRE2_PREFIX}${PCRE2_8BIT_NAME}${PCRE2_SUFFIX} ${PCRE2_PREFIX}${PCRE2_8BIT_NAME}d${PCRE2_SUFFIX}
-  DOC "8 bit PCRE2 library"
-)
-find_library(
-  PCRE2_16BIT_LIBRARY
-  NAMES ${PCRE2_PREFIX}${PCRE2_16BIT_NAME}${PCRE2_SUFFIX} ${PCRE2_PREFIX}${PCRE2_16BIT_NAME}d${PCRE2_SUFFIX}
-  DOC "16 bit PCRE2 library"
-)
-find_library(
-  PCRE2_32BIT_LIBRARY
-  NAMES ${PCRE2_PREFIX}${PCRE2_32BIT_NAME}${PCRE2_SUFFIX} ${PCRE2_PREFIX}${PCRE2_32BIT_NAME}d${PCRE2_SUFFIX}
-  DOC "32 bit PCRE2 library"
-)
-find_library(
-  PCRE2_POSIX_LIBRARY
-  NAMES ${PCRE2_PREFIX}${PCRE2_POSIX_NAME}${PCRE2_SUFFIX} ${PCRE2_PREFIX}${PCRE2_POSIX_NAME}d${PCRE2_SUFFIX}
-  DOC "8 bit POSIX PCRE2 library"
-)
-unset(PCRE2_NON_STANDARD_LIB_PREFIX)
-unset(PCRE2_NON_STANDARD_LIB_SUFFIX)
-unset(PCRE2_8BIT_NAME)
-unset(PCRE2_16BIT_NAME)
-unset(PCRE2_32BIT_NAME)
-unset(PCRE2_POSIX_NAME)
-
-# Set version
-if(PCRE2_INCLUDE_DIR)
-  set(PCRE2_VERSION "@PCRE2_MAJOR@.@PCRE2_MINOR@.0")
-endif()
-
-# Which components have been found.
-if(PCRE2_8BIT_LIBRARY)
-  set(PCRE2_8BIT_FOUND TRUE)
-endif()
-if(PCRE2_16BIT_LIBRARY)
-  set(PCRE2_16BIT_FOUND TRUE)
-endif()
-if(PCRE2_32BIT_LIBRARY)
-  set(PCRE2_32BIT_FOUND TRUE)
-endif()
-if(PCRE2_POSIX_LIBRARY)
-  set(PCRE2_POSIX_FOUND TRUE)
-endif()
-
-# Check if at least one component has been specified.
-list(LENGTH PCRE2_FIND_COMPONENTS PCRE2_NCOMPONENTS)
-if(PCRE2_NCOMPONENTS LESS 1)
-  message(FATAL_ERROR "No components have been specified. This is not allowed. Please, specify at least one component.")
-endif()
-unset(PCRE2_NCOMPONENTS)
-
-# When POSIX component has been specified make sure that also 8BIT component is specified.
-set(PCRE2_8BIT_COMPONENT FALSE)
-set(PCRE2_POSIX_COMPONENT FALSE)
-foreach(component ${PCRE2_FIND_COMPONENTS})
-  if(component STREQUAL "8BIT")
-    set(PCRE2_8BIT_COMPONENT TRUE)
-  elseif(component STREQUAL "POSIX")
-    set(PCRE2_POSIX_COMPONENT TRUE)
-  endif()
-endforeach()
-
-if(PCRE2_POSIX_COMPONENT AND NOT PCRE2_8BIT_COMPONENT)
-  message(
-    FATAL_ERROR
-    "The component POSIX is specified while the 8BIT one is not. This is not allowed. Please, also specify the 8BIT component."
-  )
-endif()
-unset(PCRE2_8BIT_COMPONENT)
-unset(PCRE2_POSIX_COMPONENT)
-
-include(FindPackageHandleStandardArgs)
-set(${CMAKE_FIND_PACKAGE_NAME}_CONFIG "${CMAKE_CURRENT_LIST_FILE}")
-find_package_handle_standard_args(
-  PCRE2
-  FOUND_VAR PCRE2_FOUND
-  REQUIRED_VARS PCRE2_INCLUDE_DIR
-  HANDLE_COMPONENTS
-  VERSION_VAR PCRE2_VERSION
-  CONFIG_MODE
-)
-
-set(PCRE2_LIBRARIES)
-if(PCRE2_FOUND)
-  foreach(component ${PCRE2_FIND_COMPONENTS})
-    if(PCRE2_USE_STATIC_LIBS)
-      add_library(PCRE2::${component} STATIC IMPORTED)
-      target_compile_definitions(PCRE2::${component} INTERFACE PCRE2_STATIC)
-    else()
-      add_library(PCRE2::${component} SHARED IMPORTED)
-    endif()
-    set_target_properties(
-      PCRE2::${component}
-      PROPERTIES
-        IMPORTED_LOCATION "${PCRE2_${component}_LIBRARY}"
-        IMPORTED_IMPLIB "${PCRE2_${component}_LIBRARY}"
-        INTERFACE_INCLUDE_DIRECTORIES "${PCRE2_INCLUDE_DIR}"
-    )
-    if(component STREQUAL "POSIX")
-      set_target_properties(
-        PCRE2::${component}
-        PROPERTIES INTERFACE_LINK_LIBRARIES "PCRE2::8BIT" LINK_LIBRARIES "PCRE2::8BIT"
-      )
-    endif()
-
-    set(PCRE2_LIBRARIES ${PCRE2_LIBRARIES} ${PCRE2_${component}_LIBRARY})
-    mark_as_advanced(PCRE2_${component}_LIBRARY)
-  endforeach()
-endif()
-
-mark_as_advanced(PCRE2_INCLUDE_DIR)
