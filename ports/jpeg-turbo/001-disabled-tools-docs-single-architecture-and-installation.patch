diff --git a/CMakeLists.txt b/CMakeLists.txt
index 352f67e9..653dfe27 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 2.8.12...3.28)
+cmake_minimum_required(VERSION 3.22)
 
 if(CMAKE_EXECUTABLE_SUFFIX)
   set(CMAKE_EXECUTABLE_SUFFIX_TMP ${CMAKE_EXECUTABLE_SUFFIX})
@@ -13,7 +13,7 @@ if(CMAKE_C_FLAGS_RELWITHDEBINFO)
   set(CMAKE_C_FLAGS_RELWITHDEBINFO_INITIALIZED_TO_DEFAULT 0)
 endif()
 
-project(libjpeg-turbo C)
+project(jpeg-turbo C)
 set(VERSION 3.1.1)
 set(COPYRIGHT_YEAR "1991-2024")
 string(REPLACE "." ";" VERSION_TRIPLET ${VERSION})
@@ -105,14 +105,27 @@ include(cmakescripts/PackageInfo.cmake)
 
 # Detect CPU type and whether we're building 64-bit or 32-bit code
 math(EXPR BITS "${CMAKE_SIZEOF_VOID_P} * 8")
-string(TOLOWER ${CMAKE_SYSTEM_PROCESSOR} CMAKE_SYSTEM_PROCESSOR_LC)
-set(COUNT 1)
-foreach(ARCH ${CMAKE_OSX_ARCHITECTURES})
-  if(COUNT GREATER 1)
-    message(FATAL_ERROR "libjpeg-turbo contains assembly code, so it cannot be built with multiple values in CMAKE_OSX_ARCHITECTURES.")
-  endif()
-  math(EXPR COUNT "${COUNT}+1")
-endforeach()
+string(TOLOWER "${CMAKE_SYSTEM_PROCESSOR}" CMAKE_SYSTEM_PROCESSOR_LC)
+
+# jpeg-turbo contains assembly code, so it cannot be built with multiple values in CMAKE_OSX_ARCHITECTURES
+#message(STATUS "CMAKE_APPLE_ARCH_SYSROOTS: ${CMAKE_APPLE_ARCH_SYSROOTS}")
+list(LENGTH CMAKE_OSX_ARCHITECTURES CMAKE_OSX_ARCHITECTURES_COUNT)
+if(CMAKE_OSX_ARCHITECTURES_COUNT GREATER 1)
+    message(WARNING "Got more than one value in CMAKE_OSX_ARCHITECTURES, normally jpeg-turbo does not support that")
+endif()
+#
+# disabled the check on iOS, and it seems to build fine into a combined/fat/universal binary
+# however, it still might cause problems at runtime, so we might not be able to use jpeg-turbo in iOS builds
+# if(NOT IOS)
+#   set(COUNT 1)
+#   foreach(ARCH ${CMAKE_OSX_ARCHITECTURES})
+#     if(COUNT GREATER 1)
+#       message(FATAL_ERROR "The libjpeg-turbo build system does not support multiple values in CMAKE_OSX_ARCHITECTURES.")
+#     endif()
+#     math(EXPR COUNT "${COUNT}+1")
+#   endforeach()
+# endif()
+
 if(CMAKE_SYSTEM_PROCESSOR_LC MATCHES "x86_64" OR
   CMAKE_SYSTEM_PROCESSOR_LC MATCHES "amd64" OR
   CMAKE_SYSTEM_PROCESSOR_LC MATCHES "i[0-9]86" OR
@@ -233,6 +246,10 @@ option(ENABLE_SHARED "Build shared libraries" TRUE)
 boolean_number(ENABLE_SHARED)
 option(ENABLE_STATIC "Build static libraries" TRUE)
 boolean_number(ENABLE_STATIC)
+option(ENABLE_EXECUTABLES "Build executables" 0)
+boolean_number(ENABLE_EXECUTABLES)
+option(INSTALL_DOCS "Install documentation files" 0)
+boolean_number(INSTALL_DOCS)
 option(REQUIRE_SIMD
   "Generate a fatal error if SIMD extensions are not available for this platform (default is to fall back to a non-SIMD build)"
   FALSE)
@@ -290,8 +307,14 @@ if(DEFINED CMAKE_POSITION_INDEPENDENT_CODE AND
   unset(CMAKE_POSITION_INDEPENDENT_CODE CACHE)
 endif()
 
-report_option(ENABLE_SHARED "Shared libraries")
-report_option(ENABLE_STATIC "Static libraries")
+if(ENABLE_SHARED AND ENABLE_STATIC)
+    message(FATAL_ERROR "Cannot have both ENABLE_SHARED and ENABLE_STATIC at the same time, choose one")
+elseif(NOT ENABLE_SHARED AND NOT ENABLE_STATIC)
+    message(FATAL_ERROR "Neither ENABLE_SHARED nor ENABLE_STATIC is set, choose one")
+else()
+    report_option(ENABLE_SHARED "Shared libraries")
+    report_option(ENABLE_STATIC "Static libraries")
+endif()
 
 if(ENABLE_SHARED)
   set(CMAKE_INSTALL_RPATH ${CMAKE_INSTALL_FULL_LIBDIR})
@@ -691,12 +714,12 @@ if(ENABLE_STATIC)
   add_library(jpeg16-static OBJECT ${JPEG16_SOURCES})
   set_property(TARGET jpeg16-static PROPERTY COMPILE_FLAGS
     "-DBITS_IN_JSAMPLE=16")
-  add_library(jpeg-static STATIC ${JPEG_SOURCES} ${SIMD_TARGET_OBJECTS}
+  add_library(jpeg STATIC ${JPEG_SOURCES} ${SIMD_TARGET_OBJECTS}
     ${SIMD_OBJS} $<TARGET_OBJECTS:jpeg12-static>
     $<TARGET_OBJECTS:jpeg16-static>)
-  if(NOT MSVC_LIKE)
-    set_target_properties(jpeg-static PROPERTIES OUTPUT_NAME jpeg)
-  endif()
+  #if(NOT MSVC_LIKE)
+    set_target_properties(jpeg PROPERTIES OUTPUT_NAME jpeg)
+  #endif()
 endif()
 
 if(WITH_TURBOJPEG)
@@ -749,6 +772,7 @@ if(WITH_TURBOJPEG)
         LINK_FLAGS "${TJMAPFLAG}${TJMAPFILE}")
     endif()
 
+    if(ENABLE_EXECUTABLES)
     add_executable(tjunittest src/tjunittest.c src/tjutil.c src/md5/md5.c
       src/md5/md5hl.c)
     target_link_libraries(tjunittest turbojpeg)
@@ -767,6 +791,7 @@ if(WITH_TURBOJPEG)
 
     add_executable(tjtran src/tjtran.c)
     target_link_libraries(tjtran turbojpeg)
+    endif()
 
     add_custom_target(tjdoc COMMAND doxygen -s ../doc/doxygen.config
       WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}/src)
@@ -779,27 +804,29 @@ if(WITH_TURBOJPEG)
     add_library(turbojpeg16-static OBJECT src/rdppm.c src/wrppm.c)
     set_property(TARGET turbojpeg16-static PROPERTY COMPILE_FLAGS
       "-DBITS_IN_JSAMPLE=16 -DPPM_SUPPORTED")
-    add_library(turbojpeg-static STATIC ${JPEG_SOURCES} ${SIMD_TARGET_OBJECTS}
+    add_library(turbojpeg STATIC ${JPEG_SOURCES} ${SIMD_TARGET_OBJECTS}
       ${SIMD_OBJS} src/turbojpeg.c src/transupp.c src/jdatadst-tj.c
       src/jdatasrc-tj.c src/rdbmp.c src/rdppm.c src/wrbmp.c src/wrppm.c
       $<TARGET_OBJECTS:jpeg12-static> $<TARGET_OBJECTS:jpeg16-static>
       $<TARGET_OBJECTS:turbojpeg12-static>
       $<TARGET_OBJECTS:turbojpeg16-static>)
-    set_property(TARGET turbojpeg-static PROPERTY COMPILE_FLAGS
+    set_property(TARGET turbojpeg PROPERTY COMPILE_FLAGS
       "-DBMP_SUPPORTED -DPPM_SUPPORTED")
     if(NOT MSVC_LIKE)
-      set_target_properties(turbojpeg-static PROPERTIES OUTPUT_NAME turbojpeg)
+      set_target_properties(turbojpeg PROPERTIES OUTPUT_NAME turbojpeg)
     endif()
 
+    if(ENABLE_EXECUTABLES)
     add_executable(tjunittest-static src/tjunittest.c src/tjutil.c
       src/md5/md5.c src/md5/md5hl.c)
-    target_link_libraries(tjunittest-static turbojpeg-static)
+    target_link_libraries(tjunittest-static turbojpeg)
 
     add_executable(tjbench-static src/tjbench.c src/tjutil.c)
-    target_link_libraries(tjbench-static turbojpeg-static)
+    target_link_libraries(tjbench-static turbojpeg)
     if(UNIX)
       target_link_libraries(tjbench-static m)
     endif()
+    endif()
   endif()
 endif()
 
@@ -809,7 +836,7 @@ endif()
 set(CDJPEG_COMPILE_FLAGS
   "-DBMP_SUPPORTED -DGIF_SUPPORTED -DPPM_SUPPORTED -DTARGA_SUPPORTED ${USE_SETMODE}")
 
-if(ENABLE_STATIC)
+if(ENABLE_STATIC AND ENABLE_EXECUTABLES)
   # Compile a separate version of these source files with 12-bit and 16-bit
   # data precision.
   add_library(cjpeg12-static OBJECT src/rdppm.c)
@@ -823,7 +850,7 @@ if(ENABLE_STATIC)
     $<TARGET_OBJECTS:cjpeg16-static>)
   set_property(TARGET cjpeg-static PROPERTY COMPILE_FLAGS
     ${CDJPEG_COMPILE_FLAGS})
-  target_link_libraries(cjpeg-static jpeg-static)
+  target_link_libraries(cjpeg-static jpeg)
 
   # Compile a separate version of these source files with 12-bit and 16-bit
   # data precision.
@@ -838,21 +865,22 @@ if(ENABLE_STATIC)
     $<TARGET_OBJECTS:djpeg12-static> $<TARGET_OBJECTS:djpeg16-static>)
   set_property(TARGET djpeg-static PROPERTY COMPILE_FLAGS
     ${CDJPEG_COMPILE_FLAGS})
-  target_link_libraries(djpeg-static jpeg-static)
+  target_link_libraries(djpeg-static jpeg)
 
   add_executable(jpegtran-static src/jpegtran.c src/cdjpeg.c src/rdswitch.c
     src/transupp.c)
-  target_link_libraries(jpegtran-static jpeg-static)
+  target_link_libraries(jpegtran-static jpeg)
   set_property(TARGET jpegtran-static PROPERTY COMPILE_FLAGS "${USE_SETMODE}")
 
   add_executable(example-static src/example.c)
-  target_link_libraries(example-static jpeg-static)
+  target_link_libraries(example-static jpeg)
 endif()
 
+if(ENABLE_EXECUTABLES)
 add_executable(rdjpgcom src/rdjpgcom.c)
 
 add_executable(wrjpgcom src/wrjpgcom.c)
-
+endif()
 
 ###############################################################################
 # TESTS
@@ -862,7 +890,9 @@ if(WITH_FUZZ)
   add_subdirectory(fuzz)
 endif()
 
+if(ENABLE_EXECUTABLES)
 add_executable(strtest src/strtest.c)
+endif()
 
 add_subdirectory(src/md5)
 
@@ -1978,17 +2008,32 @@ endif()
 # INSTALLATION
 ###############################################################################
 
+set(public_headers
+    ${CMAKE_CURRENT_SOURCE_DIR}/src/jinclude.h
+    ${CMAKE_CURRENT_SOURCE_DIR}/src/jerror.h
+    ${CMAKE_CURRENT_SOURCE_DIR}/src/jmorecfg.h
+    ${CMAKE_CURRENT_SOURCE_DIR}/src/jpeglib.h
+    #
+    ${CMAKE_CURRENT_BINARY_DIR}/jconfig.h
+    ${CMAKE_CURRENT_BINARY_DIR}/jconfigint.h
+)
+
 set(EXE ${CMAKE_EXECUTABLE_SUFFIX})
 
 if(WITH_TURBOJPEG)
+  list(APPEND public_headers ${CMAKE_CURRENT_SOURCE_DIR}/src/turbojpeg.h)
   if(ENABLE_SHARED)
+    set_target_properties(turbojpeg PROPERTIES PUBLIC_HEADER "${public_headers}")
     install(TARGETS turbojpeg EXPORT ${CMAKE_PROJECT_NAME}Targets
-      INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
       ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT lib
       LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT lib
-      RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT bin)
+      RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT bin
+      PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/jpeg
+      INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+    if(ENABLE_EXECUTABLES)
     install(TARGETS tjbench
       RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT bin)
+    endif()
     if(NOT CMAKE_VERSION VERSION_LESS "3.1" AND MSVC_LIKE AND
       CMAKE_C_LINKER_SUPPORTS_PDB)
       install(FILES "$<TARGET_PDB_FILE:turbojpeg>"
@@ -1996,10 +2041,12 @@ if(WITH_TURBOJPEG)
     endif()
   endif()
   if(ENABLE_STATIC)
-    install(TARGETS turbojpeg-static EXPORT ${CMAKE_PROJECT_NAME}Targets
-      INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
-      ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT lib)
-    if(NOT ENABLE_SHARED)
+    set_target_properties(turbojpeg PROPERTIES PUBLIC_HEADER "${public_headers}")
+    install(TARGETS turbojpeg EXPORT ${CMAKE_PROJECT_NAME}Targets
+      ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT lib
+      PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/jpeg
+      INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+    if(NOT ENABLE_SHARED AND ENABLE_EXECUTABLES)
       if(GENERATOR_IS_MULTI_CONFIG)
         set(DIR "${CMAKE_CURRENT_BINARY_DIR}/\${CMAKE_INSTALL_CONFIG_NAME}")
       else()
@@ -2009,15 +2056,15 @@ if(WITH_TURBOJPEG)
         DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT bin RENAME tjbench${EXE})
     endif()
   endif()
-  install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/src/turbojpeg.h
-    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT include)
 endif()
 
 if(ENABLE_STATIC)
-  install(TARGETS jpeg-static EXPORT ${CMAKE_PROJECT_NAME}Targets
-    INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
-    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT lib)
-  if(NOT ENABLE_SHARED)
+  set_target_properties(jpeg PROPERTIES PUBLIC_HEADER "${public_headers}")
+  install(TARGETS jpeg EXPORT ${CMAKE_PROJECT_NAME}Targets
+    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT lib
+    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/jpeg
+    INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+  if(NOT ENABLE_SHARED AND ENABLE_EXECUTABLES)
     if(GENERATOR_IS_MULTI_CONFIG)
       set(DIR "${CMAKE_CURRENT_BINARY_DIR}/\${CMAKE_INSTALL_CONFIG_NAME}")
     else()
@@ -2032,9 +2079,12 @@ if(ENABLE_STATIC)
   endif()
 endif()
 
+if(ENABLE_EXECUTABLES)
 install(TARGETS rdjpgcom wrjpgcom
   RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT bin)
+endif()
 
+if(INSTALL_DOCS)
 install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/README.ijg
   ${CMAKE_CURRENT_SOURCE_DIR}/README.md
   ${CMAKE_CURRENT_SOURCE_DIR}/src/example.c
@@ -2053,8 +2103,9 @@ if(WITH_JAVA)
     ${CMAKE_CURRENT_SOURCE_DIR}/java/TJTran.java
     DESTINATION ${CMAKE_INSTALL_DOCDIR} COMPONENT doc)
 endif()
+endif()
 
-if(UNIX OR MINGW)
+if((UNIX OR MINGW) AND INSTALL_DOCS)
   install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/doc/cjpeg.1
     ${CMAKE_CURRENT_SOURCE_DIR}/doc/djpeg.1
     ${CMAKE_CURRENT_SOURCE_DIR}/doc/jpegtran.1
@@ -2078,12 +2129,6 @@ install(EXPORT ${CMAKE_PROJECT_NAME}Targets
   DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${CMAKE_PROJECT_NAME}
   COMPONENT lib)
 
-install(FILES ${CMAKE_CURRENT_BINARY_DIR}/jconfig.h
-  ${CMAKE_CURRENT_SOURCE_DIR}/src/jerror.h
-  ${CMAKE_CURRENT_SOURCE_DIR}/src/jmorecfg.h
-  ${CMAKE_CURRENT_SOURCE_DIR}/src/jpeglib.h
-  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR} COMPONENT include)
-
 include(cmakescripts/BuildPackages.cmake)
 
 configure_file("${CMAKE_CURRENT_SOURCE_DIR}/cmakescripts/cmake_uninstall.cmake.in"
diff --git a/sharedlib/CMakeLists.txt b/sharedlib/CMakeLists.txt
index c8c92996..e8f61bce 100644
--- a/sharedlib/CMakeLists.txt
+++ b/sharedlib/CMakeLists.txt
@@ -94,11 +94,13 @@ set_property(TARGET cjpeg12 PROPERTY COMPILE_FLAGS
 add_library(cjpeg16 OBJECT ../src/rdppm.c)
 set_property(TARGET cjpeg16 PROPERTY COMPILE_FLAGS
   "-DBITS_IN_JSAMPLE=16 -DGIF_SUPPORTED -DPPM_SUPPORTED")
+if(ENABLE_EXECUTABLES)
 add_executable(cjpeg ../src/cjpeg.c ../src/cdjpeg.c ../src/rdbmp.c
   ../src/rdgif.c ../src/rdppm.c ../src/rdswitch.c ../src/rdtarga.c
   $<TARGET_OBJECTS:cjpeg12> $<TARGET_OBJECTS:cjpeg16>)
 set_property(TARGET cjpeg PROPERTY COMPILE_FLAGS ${CDJPEG_COMPILE_FLAGS})
 target_link_libraries(cjpeg jpeg)
+endif()
 
 # Compile a separate version of these source files with 12-bit and 16-bit data
 # precision.
@@ -108,12 +110,15 @@ set_property(TARGET djpeg12 PROPERTY COMPILE_FLAGS
 add_library(djpeg16 OBJECT ../src/wrppm.c)
 set_property(TARGET djpeg16 PROPERTY COMPILE_FLAGS
   "-DBITS_IN_JSAMPLE=16 -DPPM_SUPPORTED")
+if(ENABLE_EXECUTABLES)
 add_executable(djpeg ../src/djpeg.c ../src/cdjpeg.c ../src/rdcolmap.c
   ../src/rdswitch.c ../src/wrbmp.c ../src/wrgif.c ../src/wrppm.c
   ../src/wrtarga.c $<TARGET_OBJECTS:djpeg12> $<TARGET_OBJECTS:djpeg16>)
 set_property(TARGET djpeg PROPERTY COMPILE_FLAGS ${CDJPEG_COMPILE_FLAGS})
 target_link_libraries(djpeg jpeg)
+endif()
 
+if(ENABLE_EXECUTABLES)
 add_executable(jpegtran ../src/jpegtran.c ../src/cdjpeg.c ../src/rdswitch.c
   ../src/transupp.c)
 target_link_libraries(jpegtran jpeg)
@@ -124,14 +129,17 @@ target_link_libraries(example jpeg)
 
 add_executable(jcstest ../src/jcstest.c)
 target_link_libraries(jcstest jpeg)
+endif()
 
 install(TARGETS jpeg EXPORT ${CMAKE_PROJECT_NAME}Targets
   INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
   ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT lib
   LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT lib
   RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT bin)
+if(ENABLE_EXECUTABLES)
 install(TARGETS cjpeg djpeg jpegtran
   RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT bin)
+endif()
 if(NOT CMAKE_VERSION VERSION_LESS "3.1" AND MSVC_LIKE AND
   CMAKE_C_LINKER_SUPPORTS_PDB)
   install(FILES "$<TARGET_PDB_FILE:jpeg>"
