diff --git a/CMakeLists.txt b/CMakeLists.txt
index d866b8da..cab5ba2b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -67,13 +67,26 @@ include(cmakescripts/PackageInfo.cmake)
 # Detect CPU type and whether we're building 64-bit or 32-bit code
 math(EXPR BITS "${CMAKE_SIZEOF_VOID_P} * 8")
 string(TOLOWER ${CMAKE_SYSTEM_PROCESSOR} CMAKE_SYSTEM_PROCESSOR_LC)
-set(COUNT 1)
-foreach(ARCH ${CMAKE_OSX_ARCHITECTURES})
-  if(COUNT GREATER 1)
-    message(FATAL_ERROR "The libjpeg-turbo build system does not support multiple values in CMAKE_OSX_ARCHITECTURES.")
-  endif()
-  math(EXPR COUNT "${COUNT}+1")
-endforeach()
+
+# jpeg-turbo contains assembly code, so it cannot be built with multiple values in CMAKE_OSX_ARCHITECTURES
+#message(STATUS "CMAKE_APPLE_ARCH_SYSROOTS: ${CMAKE_APPLE_ARCH_SYSROOTS}")
+list(LENGTH CMAKE_OSX_ARCHITECTURES CMAKE_OSX_ARCHITECTURES_COUNT)
+if(CMAKE_OSX_ARCHITECTURES_COUNT GREATER 1)
+    message(WARNING "Got more than one value in CMAKE_OSX_ARCHITECTURES, normally jpeg-turbo does not support that")
+endif()
+
+# disabled the check on iOS, and it seems to build fine into a combined/fat/universal binary
+# however, it still might cause problems at runtime, so we might not be able to use jpeg-turbo in iOS builds
+# if(NOT IOS)
+#   set(COUNT 1)
+#   foreach(ARCH ${CMAKE_OSX_ARCHITECTURES})
+#     if(COUNT GREATER 1)
+#       message(FATAL_ERROR "The libjpeg-turbo build system does not support multiple values in CMAKE_OSX_ARCHITECTURES.")
+#     endif()
+#     math(EXPR COUNT "${COUNT}+1")
+#   endforeach()
+# endif()
+
 if(CMAKE_SYSTEM_PROCESSOR_LC MATCHES "x86_64" OR
   CMAKE_SYSTEM_PROCESSOR_LC MATCHES "amd64" OR
   CMAKE_SYSTEM_PROCESSOR_LC MATCHES "i[0-9]86" OR
