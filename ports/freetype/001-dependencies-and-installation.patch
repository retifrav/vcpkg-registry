diff --git a/CMakeLists.txt b/CMakeLists.txt
index cd04b9745..692e4ecfd 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -254,42 +254,21 @@ if (NOT FT_DISABLE_HARFBUZZ)
   endif ()
 endif ()
 
-if (NOT FT_DISABLE_PNG)
-  if (FT_REQUIRE_PNG)
-    find_package(PNG REQUIRED)
-  else ()
-    find_package(PNG)
-  endif ()
-endif ()
+if(NOT FT_DISABLE_PNG)
+    find_package(png CONFIG REQUIRED)
+endif()
 
-if (NOT FT_DISABLE_ZLIB)
-  if (FT_REQUIRE_ZLIB)
-    find_package(ZLIB REQUIRED)
-  else ()
-    find_package(ZLIB)
-  endif ()
-endif ()
+if(NOT FT_DISABLE_ZLIB)
+    find_package(zlib CONFIG REQUIRED)
+endif()
 
-if (NOT FT_DISABLE_BZIP2)
-  # Genuine BZip2 does not provide bzip2.pc, but some platforms have it.
-  # For better dependency in freetype2.pc, bzip2.pc is searched
-  # regardless of the availability of libbz2. If bzip2.pc is found,
-  # Requires.private is used instead of Libs.private.
-  if (FT_REQUIRE_BZIP2)
-    find_package(BZip2 REQUIRED)
-  else ()
-    find_package(BZip2)
-  endif ()
-  pkg_check_modules(PC_BZIP2 bzip2)
-endif ()
+if(NOT FT_DISABLE_BZIP2)
+    find_package(bzip2 CONFIG REQUIRED)
+endif()
 
-if (NOT FT_DISABLE_BROTLI)
-  if (FT_REQUIRE_BROTLI)
-    find_package(BrotliDec REQUIRED)
-  else ()
-    find_package(BrotliDec)
-  endif ()
-endif ()
+if(NOT FT_DISABLE_BROTLI)
+    find_package(brotli CONFIG REQUIRED)
+endif()
 
 # Create the configuration file
 if (UNIX)
@@ -347,11 +326,11 @@ if (HARFBUZZ_FOUND)
     "/\\* +(#define +FT_CONFIG_OPTION_USE_HARFBUZZ) +\\*/" "\\1"
     FTOPTION_H "${FTOPTION_H}")
 endif ()
-if (BROTLIDEC_FOUND)
+if(NOT FT_DISABLE_BROTLI)
   string(REGEX REPLACE
     "/\\* +(#define +FT_CONFIG_OPTION_USE_BROTLI) +\\*/" "\\1"
     FTOPTION_H "${FTOPTION_H}")
-endif ()
+endif()
 
 set(FTOPTION_H_NAME "${PROJECT_BINARY_DIR}/include/freetype/config/ftoption.h")
 if (EXISTS "${FTOPTION_H_NAME}")
@@ -528,11 +507,11 @@ if (HarfBuzz_FOUND)
   target_include_directories(freetype PRIVATE ${HarfBuzz_INCLUDE_DIRS})
   list(APPEND PKGCONFIG_REQUIRES_PRIVATE "harfbuzz >= ${HARFBUZZ_MIN_VERSION}")
 endif ()
-if (BROTLIDEC_FOUND)
-  target_link_libraries(freetype PRIVATE ${BROTLIDEC_LIBRARIES})
-  target_compile_definitions(freetype PRIVATE ${BROTLIDEC_DEFINITIONS})
-  target_include_directories(freetype PRIVATE ${BROTLIDEC_INCLUDE_DIRS})
-  list(APPEND PKGCONFIG_REQUIRES_PRIVATE "libbrotlidec")
+if(NOT FT_DISABLE_BROTLI)
+    target_link_libraries(freetype PRIVATE brotlidec brotlicommon)
+    #target_compile_definitions(freetype PRIVATE ${BROTLIDEC_DEFINITIONS})
+    #target_include_directories(freetype PRIVATE ${BROTLIDEC_INCLUDE_DIRS})
+    list(APPEND PKGCONFIG_REQUIRES_PRIVATE "libbrotlidec")
 endif ()
 
 
@@ -624,12 +603,24 @@ if (NOT SKIP_INSTALL_LIBRARIES AND NOT SKIP_INSTALL_ALL)
   install(
     EXPORT freetype-targets
       DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/freetype
-      FILE freetype-config.cmake
+      FILE freetype-targets.cmake
       COMPONENT headers)
   install(
     FILES ${PROJECT_BINARY_DIR}/freetype-config-version.cmake
     DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/freetype
     COMPONENT headers)
+
+    # create config file
+    configure_package_config_file(
+        "${CMAKE_CURRENT_SOURCE_DIR}/Config.cmake.in"
+        "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config.cmake"
+        INSTALL_DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}"
+    )
+    # install config files
+    install(FILES
+        "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config.cmake"
+        DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}"
+    )
 endif ()
 
 
diff --git a/Config.cmake.in b/Config.cmake.in
new file mode 100644
index 000000000..e36a7982a
--- /dev/null
+++ b/Config.cmake.in
@@ -0,0 +1,19 @@
+@PACKAGE_INIT@
+
+include(CMakeFindDependencyMacro)
+if(NOT @FT_DISABLE_BROTLI@)
+    find_dependency(brotli CONFIG REQUIRED)
+endif()
+if(NOT @FT_DISABLE_BZIP2@)
+    find_dependency(bzip2 CONFIG REQUIRED)
+endif()
+if(NOT @FT_DISABLE_PNG@)
+    find_dependency(png CONFIG REQUIRED)
+endif()
+if(NOT @FT_DISABLE_ZLIB@)
+    find_dependency(zlib CONFIG REQUIRED)
+endif()
+
+include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake")
+
+check_required_components(@PROJECT_NAME@)
