diff --git a/CMakeLists.txt b/CMakeLists.txt
index cd04b9745..73fa5a6b0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -108,16 +108,7 @@
 
 # To minimize the number of cmake_policy() workarounds,
 # CMake >= 3 is requested.
-cmake_minimum_required(VERSION 3.0)
-
-if (NOT CMAKE_VERSION VERSION_LESS 3.3)
-  # Allow symbol visibility settings also on static libraries. CMake < 3.3
-  # only sets the property on a shared library build.
-  cmake_policy(SET CMP0063 NEW)
-
-  # Support new IN_LIST if() operator.
-  cmake_policy(SET CMP0057 NEW)
-endif ()
+cmake_minimum_required(VERSION 3.22)
 
 include(CheckIncludeFile)
 include(CMakeDependentOption)
@@ -158,8 +149,7 @@ else ()
   endif ()
 endif ()
 
-
-project(freetype C)
+project(freetype LANGUAGES C)
 
 set(VERSION_MAJOR "2")
 set(VERSION_MINOR "12")
@@ -247,49 +237,24 @@ endif ()
 # Find dependencies
 if (NOT FT_DISABLE_HARFBUZZ)
   set(HARFBUZZ_MIN_VERSION "2.0.0")
-  if (FT_REQUIRE_HARFBUZZ)
-    find_package(HarfBuzz ${HARFBUZZ_MIN_VERSION} REQUIRED)
-  else ()
-    find_package(HarfBuzz ${HARFBUZZ_MIN_VERSION})
-  endif ()
+  find_package(HarfBuzz ${HARFBUZZ_MIN_VERSION} REQUIRED)
 endif ()
 
-if (NOT FT_DISABLE_PNG)
-  if (FT_REQUIRE_PNG)
-    find_package(PNG REQUIRED)
-  else ()
-    find_package(PNG)
-  endif ()
-endif ()
+if(NOT FT_DISABLE_PNG)
+    find_package(png CONFIG REQUIRED)
+endif()
 
-if (NOT FT_DISABLE_ZLIB)
-  if (FT_REQUIRE_ZLIB)
-    find_package(ZLIB REQUIRED)
-  else ()
-    find_package(ZLIB)
-  endif ()
-endif ()
+if(NOT FT_DISABLE_ZLIB)
+    find_package(zlib CONFIG REQUIRED)
+endif()
 
-if (NOT FT_DISABLE_BZIP2)
-  # Genuine BZip2 does not provide bzip2.pc, but some platforms have it.
-  # For better dependency in freetype2.pc, bzip2.pc is searched
-  # regardless of the availability of libbz2. If bzip2.pc is found,
-  # Requires.private is used instead of Libs.private.
-  if (FT_REQUIRE_BZIP2)
-    find_package(BZip2 REQUIRED)
-  else ()
-    find_package(BZip2)
-  endif ()
-  pkg_check_modules(PC_BZIP2 bzip2)
-endif ()
+if(NOT FT_DISABLE_BZIP2)
+    find_package(bzip2 CONFIG REQUIRED)
+endif()
 
-if (NOT FT_DISABLE_BROTLI)
-  if (FT_REQUIRE_BROTLI)
-    find_package(BrotliDec REQUIRED)
-  else ()
-    find_package(BrotliDec)
-  endif ()
-endif ()
+if(NOT FT_DISABLE_BROTLI)
+    find_package(brotli CONFIG REQUIRED)
+endif()
 
 # Create the configuration file
 if (UNIX)
@@ -327,31 +292,31 @@ endif ()
 # Create the options file
 file(READ "${PROJECT_SOURCE_DIR}/include/freetype/config/ftoption.h"
   FTOPTION_H)
-if (ZLIB_FOUND)
+if (NOT FT_DISABLE_ZLIB)
   string(REGEX REPLACE
     "/\\* +(#define +FT_CONFIG_OPTION_SYSTEM_ZLIB) +\\*/" "\\1"
     FTOPTION_H "${FTOPTION_H}")
 endif ()
-if (BZIP2_FOUND)
+if (NOT FT_DISABLE_BZIP2)
   string(REGEX REPLACE
     "/\\* +(#define +FT_CONFIG_OPTION_USE_BZIP2) +\\*/" "\\1"
     FTOPTION_H "${FTOPTION_H}")
 endif ()
-if (PNG_FOUND)
+if (NOT FT_DISABLE_PNG)
   string(REGEX REPLACE
     "/\\* +(#define +FT_CONFIG_OPTION_USE_PNG) +\\*/" "\\1"
     FTOPTION_H "${FTOPTION_H}")
 endif ()
-if (HARFBUZZ_FOUND)
+if (NOT FT_DISABLE_HARFBUZZ)
   string(REGEX REPLACE
     "/\\* +(#define +FT_CONFIG_OPTION_USE_HARFBUZZ) +\\*/" "\\1"
     FTOPTION_H "${FTOPTION_H}")
 endif ()
-if (BROTLIDEC_FOUND)
+if(NOT FT_DISABLE_BROTLI)
   string(REGEX REPLACE
     "/\\* +(#define +FT_CONFIG_OPTION_USE_BROTLI) +\\*/" "\\1"
     FTOPTION_H "${FTOPTION_H}")
-endif ()
+endif()
 
 set(FTOPTION_H_NAME "${PROJECT_BINARY_DIR}/include/freetype/config/ftoption.h")
 if (EXISTS "${FTOPTION_H_NAME}")
@@ -469,17 +434,18 @@ if (BUILD_SHARED_LIBS)
     SOVERSION ${LIBRARY_SOVERSION})
 endif ()
 
+include(GNUInstallDirs)
+
 # Pick up ftconfig.h and ftoption.h generated above, first.
 target_include_directories(
   freetype
     PUBLIC
-      $<INSTALL_INTERFACE:include/freetype2>
+      $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/freetype2> # god fucking dammit
       $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/include>
       $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
     PRIVATE
       ${CMAKE_CURRENT_BINARY_DIR}/include
       ${CMAKE_CURRENT_SOURCE_DIR}/include
-
       # Make <ftconfig.h> available for builds/unix/ftsystem.c.
       ${CMAKE_CURRENT_BINARY_DIR}/include/freetype/config
 )
@@ -498,46 +464,25 @@ if (BUILD_FRAMEWORK)
 endif ()
 
 
-set(PKGCONFIG_REQUIRES "")
-set(PKGCONFIG_REQUIRES_PRIVATE "")
-set(PKGCONFIG_LIBS "-L\${libdir} -lfreetype")
-set(PKGCONFIG_LIBS_PRIVATE "")
-
-if (ZLIB_FOUND)
-  target_link_libraries(freetype PRIVATE ${ZLIB_LIBRARIES})
-  target_include_directories(freetype PRIVATE ${ZLIB_INCLUDE_DIRS})
-  list(APPEND PKGCONFIG_REQUIRES_PRIVATE "zlib")
+if (NOT FT_DISABLE_ZLIB)
+  target_link_libraries(freetype PRIVATE zlib)
 endif ()
-if (BZIP2_FOUND)
-  target_link_libraries(freetype PRIVATE ${BZIP2_LIBRARIES})
-  target_include_directories(freetype PRIVATE ${BZIP2_INCLUDE_DIR}) # not BZIP2_INCLUDE_DIRS
-  if (PC_BZIP2_FOUND)
-    list(APPEND PKGCONFIG_REQUIRES_PRIVATE "bzip2")
-  else ()
-    list(APPEND PKGCONFIG_LIBS_PRIVATE "-lbz2")
-  endif ()
+if (NOT FT_DISABLE_BZIP2)
+  target_link_libraries(freetype PRIVATE bzip2)
 endif ()
-if (PNG_FOUND)
-  target_link_libraries(freetype PRIVATE ${PNG_LIBRARIES})
-  target_compile_definitions(freetype PRIVATE ${PNG_DEFINITIONS})
-  target_include_directories(freetype PRIVATE ${PNG_INCLUDE_DIRS})
-  list(APPEND PKGCONFIG_REQUIRES_PRIVATE "libpng")
+if (NOT FT_DISABLE_PNG)
+  target_link_libraries(freetype PRIVATE png)
 endif ()
-if (HarfBuzz_FOUND)
+if (NOT FT_DISABLE_HARFBUZZ)
   target_link_libraries(freetype PRIVATE ${HarfBuzz_LIBRARY})
   target_include_directories(freetype PRIVATE ${HarfBuzz_INCLUDE_DIRS})
-  list(APPEND PKGCONFIG_REQUIRES_PRIVATE "harfbuzz >= ${HARFBUZZ_MIN_VERSION}")
 endif ()
-if (BROTLIDEC_FOUND)
-  target_link_libraries(freetype PRIVATE ${BROTLIDEC_LIBRARIES})
-  target_compile_definitions(freetype PRIVATE ${BROTLIDEC_DEFINITIONS})
-  target_include_directories(freetype PRIVATE ${BROTLIDEC_INCLUDE_DIRS})
-  list(APPEND PKGCONFIG_REQUIRES_PRIVATE "libbrotlidec")
+if(NOT FT_DISABLE_BROTLI)
+    target_link_libraries(freetype PRIVATE brotlidec brotlicommon)
 endif ()
 
 
 # Installation
-include(GNUInstallDirs)
 
 if (NOT SKIP_INSTALL_HEADERS AND NOT SKIP_INSTALL_ALL)
   install(
@@ -556,57 +501,6 @@ if (NOT SKIP_INSTALL_HEADERS AND NOT SKIP_INSTALL_ALL)
 endif ()
 
 if (NOT SKIP_INSTALL_LIBRARIES AND NOT SKIP_INSTALL_ALL)
-  # Generate the pkg-config file
-  file(READ "${PROJECT_SOURCE_DIR}/builds/unix/freetype2.in" FREETYPE2_PC_IN)
-
-  string(REPLACE ";" ", " PKGCONFIG_REQUIRES_PRIVATE "${PKGCONFIG_REQUIRES_PRIVATE}")
-
-  string(REPLACE "%prefix%" ${CMAKE_INSTALL_PREFIX}
-          FREETYPE2_PC_IN ${FREETYPE2_PC_IN})
-  string(REPLACE "%exec_prefix%" "\${prefix}"
-          FREETYPE2_PC_IN ${FREETYPE2_PC_IN})
-  string(REPLACE "%libdir%" "\${prefix}/${CMAKE_INSTALL_LIBDIR}"
-          FREETYPE2_PC_IN ${FREETYPE2_PC_IN})
-  string(REPLACE "%includedir%" "\${prefix}/${CMAKE_INSTALL_INCLUDEDIR}"
-          FREETYPE2_PC_IN ${FREETYPE2_PC_IN})
-  string(REPLACE "%ft_version%" "${LIBTOOL_CURRENT}.${LIBTOOL_REVISION}.${LIBTOOL_AGE}"
-          FREETYPE2_PC_IN ${FREETYPE2_PC_IN})
-
-  if (BUILD_SHARED_LIBS)
-    string(REPLACE "%PKGCONFIG_REQUIRES%" "${PKGCONFIG_REQUIRES}"
-            FREETYPE2_PC_IN ${FREETYPE2_PC_IN})
-    string(REPLACE "%PKGCONFIG_REQUIRES_PRIVATE%" "${PKGCONFIG_REQUIRES_PRIVATE}"
-            FREETYPE2_PC_IN ${FREETYPE2_PC_IN})
-    string(REPLACE "%PKGCONFIG_LIBS%" "${PKGCONFIG_LIBS}"
-            FREETYPE2_PC_IN ${FREETYPE2_PC_IN})
-    string(REPLACE "%PKGCONFIG_LIBS_PRIVATE%" "${PKGCONFIG_LIBS_PRIVATE}"
-            FREETYPE2_PC_IN ${FREETYPE2_PC_IN})
-  else ()
-    string(REPLACE "%PKGCONFIG_REQUIRES%" "${PKGCONFIG_REQUIRES} ${PKGCONFIG_REQUIRES_PRIVATE}"
-            FREETYPE2_PC_IN ${FREETYPE2_PC_IN})
-    string(REPLACE "%PKGCONFIG_REQUIRES_PRIVATE%" ""
-            FREETYPE2_PC_IN ${FREETYPE2_PC_IN})
-    string(REPLACE "%PKGCONFIG_LIBS%" "${PKGCONFIG_LIBS} ${PKGCONFIG_LIBS_PRIVATE}"
-            FREETYPE2_PC_IN ${FREETYPE2_PC_IN})
-    string(REPLACE "%PKGCONFIG_LIBS_PRIVATE%" ""
-            FREETYPE2_PC_IN ${FREETYPE2_PC_IN})
-  endif ()
-
-  set(FREETYPE2_PC_IN_NAME "${PROJECT_BINARY_DIR}/freetype2.pc")
-  if (EXISTS "${FREETYPE2_PC_IN_NAME}")
-    file(READ "${FREETYPE2_PC_IN_NAME}" ORIGINAL_FREETYPE2_PC_IN)
-  else ()
-    set(ORIGINAL_FREETYPE2_PC_IN "")
-  endif ()
-  if (NOT (ORIGINAL_FREETYPE2_PC_IN STREQUAL FREETYPE2_PC_IN))
-    file(WRITE "${FREETYPE2_PC_IN_NAME}" ${FREETYPE2_PC_IN})
-  endif ()
-
-  install(
-    FILES ${PROJECT_BINARY_DIR}/freetype2.pc
-    DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig
-    COMPONENT pkgconfig)
-
   include(CMakePackageConfigHelpers)
   write_basic_package_version_file(
     ${PROJECT_BINARY_DIR}/freetype-config-version.cmake
@@ -624,12 +518,24 @@ if (NOT SKIP_INSTALL_LIBRARIES AND NOT SKIP_INSTALL_ALL)
   install(
     EXPORT freetype-targets
       DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/freetype
-      FILE freetype-config.cmake
+      FILE freetype-targets.cmake
       COMPONENT headers)
   install(
     FILES ${PROJECT_BINARY_DIR}/freetype-config-version.cmake
     DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/freetype
     COMPONENT headers)
+
+    # create config file
+    configure_package_config_file(
+        "${CMAKE_CURRENT_SOURCE_DIR}/Config.cmake.in"
+        "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config.cmake"
+        INSTALL_DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}"
+    )
+    # install config files
+    install(FILES
+        "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config.cmake"
+        DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}"
+    )
 endif ()
 
 
diff --git a/src/bzip2/ftbzip2.c b/src/bzip2/ftbzip2.c
index ab2da7e62..dd07a7c4d 100644
--- a/src/bzip2/ftbzip2.c
+++ b/src/bzip2/ftbzip2.c
@@ -43,7 +43,7 @@
 #ifdef FT_CONFIG_OPTION_USE_BZIP2
 
 #define BZ_NO_STDIO /* Do not need FILE */
-#include <bzlib.h>
+#include <bzip2/bzlib.h>
 
 
 /***************************************************************************/
diff --git a/src/gzip/ftgzip.c b/src/gzip/ftgzip.c
index 34bbe4daf..d9a02c420 100644
--- a/src/gzip/ftgzip.c
+++ b/src/gzip/ftgzip.c
@@ -42,7 +42,7 @@
 
 #ifdef FT_CONFIG_OPTION_SYSTEM_ZLIB
 
-#include <zlib.h>
+#include <zlib/zlib.h>
 
 #else /* !FT_CONFIG_OPTION_SYSTEM_ZLIB */
 
diff --git a/src/sfnt/pngshim.c b/src/sfnt/pngshim.c
index 0ce4bdb6b..9f0c58543 100644
--- a/src/sfnt/pngshim.c
+++ b/src/sfnt/pngshim.c
@@ -28,7 +28,7 @@
 
   /* We always include <setjmp.h>, so make libpng shut up! */
 #define PNG_SKIP_SETJMP_CHECK 1
-#include <png.h>
+#include <png/png.h>
 #include "pngshim.h"
 
 #include "sferrors.h"
