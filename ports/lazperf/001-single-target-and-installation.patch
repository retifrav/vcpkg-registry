diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0a1b236..099f1b6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,31 +1,38 @@
-cmake_minimum_required(VERSION 3.13)
+cmake_minimum_required(VERSION 3.22)
 
-project(LAZPERF VERSION 3.4.0)
+set(LAZPERF_VERSION "0.0.0" CACHE STRING "LAZperf version")
+
+project(lazperf VERSION ${LAZPERF_VERSION})
+
+option(WITH_TOOLS "Choose if LAZPERF tools should be built" 0)
+option(WITH_TESTS "Choose if LAZPERF unit tests should be built" 0)
+
+set(CMAKE_DEBUG_POSTFIX "d" CACHE STRING "Filename postfix for libraries under DEBUG configuration")
 
 set(ROOT_DIR ${PROJECT_SOURCE_DIR})
 include(${ROOT_DIR}/cmake/common.cmake NO_POLICY_SCOPE)
-include(${ROOT_DIR}/cmake/gtest.cmake)
+
+if(WITH_TESTS)
+    include(${ROOT_DIR}/cmake/gtest.cmake)
+endif()
 
 set(CMAKE_CXX_STANDARD 17)
-set(CMAKE_CXX_STANDARD_REQUIRED ON)
+set(CMAKE_CXX_STANDARD_REQUIRED YES)
 
 # Allow advanced users to generate Makefiles printing detailed commands
 mark_as_advanced(CMAKE_VERBOSE_MAKEFILE)
 
 # Path to additional CMake modules
-set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/modules ${CMAKE_MODULE_PATH})
+list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/modules)
 
 #------------------------------------------------------------------------------
 # general settings
 #------------------------------------------------------------------------------
 
 # Choose package components
-set(WITH_TESTS TRUE CACHE BOOL "Choose if LAZPERF unit tests should be built")
 
-if (EMSCRIPTEN)
+if(CMAKE_SYSTEM_NAME STREQUAL "Emscripten")
     set(WITH_TESTS NO)
-else()
-    include(${LAZPERF_CMAKE_DIR}/install.cmake)
 endif()
 
 if(WITH_TESTS)
diff --git a/cmake/functions.cmake b/cmake/functions.cmake
index b94f4eb..e6dc146 100644
--- a/cmake/functions.cmake
+++ b/cmake/functions.cmake
@@ -1,7 +1,4 @@
 function(lazperf_add_library _target _type)
     add_library(${_target} ${_type} ${ARGN})
     lazperf_library_compile_settings(${_target} ${_type})
-    if (${_type} STREQUAL "SHARED")
-        lazperf_install_library(${_target})
-    endif()
 endfunction()
diff --git a/cmake/unix_compiler_options.cmake b/cmake/unix_compiler_options.cmake
index fa85a8d..953e906 100644
--- a/cmake/unix_compiler_options.cmake
+++ b/cmake/unix_compiler_options.cmake
@@ -1,6 +1,4 @@
 function(lazperf_target_compile_settings target)
-    set_property(TARGET ${target} PROPERTY CXX_STANDARD 11)
-    set_property(TARGET ${target} PROPERTY CXX_STANDARD_REQUIRED TRUE)
     if (${CMAKE_CXX_COMPILER_ID} MATCHES "GNU")
         #
         # VERSION_GREATER_EQUAL doesn't come until cmake 3.7
diff --git a/cmake/win32_compiler_options.cmake b/cmake/win32_compiler_options.cmake
index 497213f..a947652 100644
--- a/cmake/win32_compiler_options.cmake
+++ b/cmake/win32_compiler_options.cmake
@@ -3,8 +3,6 @@
 #
 
 function(lazperf_target_compile_settings target)
-    set_property(TARGET ${target} PROPERTY CXX_STANDARD 11)
-    set_property(TARGET ${target} PROPERTY CXX_STANDARD_REQUIRED TRUE)
     target_compile_definitions(${target} PRIVATE
         -DWIN32_LEAN_AND_MEAN)
     if (MSVC)
diff --git a/cpp/CMakeLists.txt b/cpp/CMakeLists.txt
index 60da7f3..02f4ed9 100644
--- a/cpp/CMakeLists.txt
+++ b/cpp/CMakeLists.txt
@@ -4,37 +4,28 @@ file(GLOB SRCS
     lazperf/detail/*.cpp
 )
 
-set (LAZPERF_SHARED_LIB lazperf)
-set (LAZPERF_STATIC_LIB lazperf_s)
-
-if (NOT EMSCRIPTEN)
-    lazperf_add_library(${LAZPERF_SHARED_LIB} SHARED ${SRCS})
+if(DEFINED BUILD_SHARED_LIBS AND BUILD_SHARED_LIBS)
+    lazperf_add_library(${PROJECT_NAME} SHARED ${SRCS})
+else()
+    lazperf_add_library(${PROJECT_NAME} STATIC ${SRCS})
 endif()
-lazperf_add_library(${LAZPERF_STATIC_LIB} STATIC ${SRCS})
-
-install(
-    FILES
-        lazperf/lazperf.hpp
-        lazperf/filestream.hpp
-        lazperf/header.hpp
-        lazperf/readers.hpp
-        lazperf/vlr.hpp
-        lazperf/writers.hpp
-    DESTINATION
-        include/lazperf
-)
-install(
-    FILES
-        lazperf/lazperf_user_base.hpp
-    DESTINATION
-        include/lazperf
-    RENAME
-        lazperf_base.hpp
+
+set(public_headers
+    lazperf/filestream.hpp
+    lazperf/header.hpp
+    lazperf/lazperf.hpp
+    lazperf/lazperf_base.hpp
+    lazperf/readers.hpp
+    lazperf/vlr.hpp
+    lazperf/writers.hpp
 )
 
-add_subdirectory(benchmarks)
-add_subdirectory(tools)
-if (EMSCRIPTEN)
+if(WITH_TOOLS)
+    add_subdirectory(benchmarks)
+    add_subdirectory(tools)
+endif()
+
+if(CMAKE_SYSTEM_NAME STREQUAL "Emscripten")
     add_subdirectory(emscripten)
 endif()
 
@@ -44,3 +35,7 @@ if (WITH_TESTS)
     add_subdirectory(examples)
 endif()
 
+set_target_properties(${PROJECT_NAME} PROPERTIES PUBLIC_HEADER "${public_headers}")
+
+set(PROJECT_NAMESPACE_FOR_PACKAGE "LAZPERF")
+include("${CMAKE_CURRENT_SOURCE_DIR}/Installing.cmake")
diff --git a/cpp/emscripten/CMakeLists.txt b/cpp/emscripten/CMakeLists.txt
index 2fedf6c..05e4a29 100755
--- a/cpp/emscripten/CMakeLists.txt
+++ b/cpp/emscripten/CMakeLists.txt
@@ -37,7 +37,7 @@ endif()
 message("FLAGS: ${CMAKE_CXX_FLAGS}")
 
 add_executable(laz-perf laz-perf.cpp)
-target_link_libraries(laz-perf ${LAZPERF_STATIC_LIB})
+target_link_libraries(laz-perf ${PROJECT_NAME})
 
 if (WASM)
   SET_TARGET_PROPERTIES(laz-perf PROPERTIES SUFFIX .js)
diff --git a/cpp/examples/CMakeLists.txt b/cpp/examples/CMakeLists.txt
index f422e39..473a8b7 100644
--- a/cpp/examples/CMakeLists.txt
+++ b/cpp/examples/CMakeLists.txt
@@ -5,7 +5,7 @@ target_include_directories(point10
 )
 target_link_libraries(point10
     PRIVATE
-        ${LAZPERF_STATIC_LIB}
+        ${PROJECT_NAME}
 )
 lazperf_target_compile_settings(point10)
 
@@ -16,11 +16,11 @@ target_include_directories(readlaz
 )
 target_link_libraries(readlaz
     PRIVATE
-        ${LAZPERF_STATIC_LIB}
+        ${PROJECT_NAME}
 )
 lazperf_target_compile_settings(readlaz)
 
-if (EMSCRIPTEN)
+if(CMAKE_SYSTEM_NAME STREQUAL "Emscripten")
 	SET_TARGET_PROPERTIES(point10 PROPERTIES SUFFIX .js)
 	SET_TARGET_PROPERTIES(readlaz PROPERTIES SUFFIX .js)
 endif()
diff --git a/cpp/lazperf/lazperf_base.hpp b/cpp/lazperf/lazperf_base.hpp
index f57fa6f..94633d9 100644
--- a/cpp/lazperf/lazperf_base.hpp
+++ b/cpp/lazperf/lazperf_base.hpp
@@ -1,18 +1,24 @@
+#ifndef LAZPERF_BASE_HPP
+#define LAZPERF_BASE_HPP
 
-#pragma once
-
-#define LAZPERF_MAJOR_VERSION 3
-#define LAZPERF_MINOR_VERSION 2
-#define LAZPERF_REVISION 0
-#define LAZPERF_VERSION 3.2.0
-
-#ifndef LAZPERF_VENDORED
-#ifdef _WIN32
-#define LAZPERF_EXPORT __declspec(dllexport)
-#else
-// This may not be necessary. The GCC doc says it take __declspec((dllexport))
-#define LAZPERF_EXPORT __attribute__((visibility ("default")))
+#ifdef lazperf_EXPORTS // CMake sets that when BUILD_SHARED_LIBS=1
+    #ifdef _MSC_VER // or `_WIN32`?
+        // export on compiling the DLL (when building)
+        #define LAZPERF_EXPORT __declspec(dllexport)
+    //#elif __GNUC__ >= 4 // for GCC
+    //    #define LAZPERF_EXPORT __attribute__ ((visibility("default")))
+    #endif // any other compilers require anything like that?
+// #else // these are failing when building a static variant with the error `definition of dllimport static data member not allowed`
+//     #ifdef _MSC_VER // or `_WIN32`?
+//         // import on using the created DLL (when using in projects)
+//         #define LAZPERF_EXPORT __declspec(dllimport)
+//     //#elif __GNUC__ >= 4 // for GCC
+//     //    // something here for GCC?
+//     #endif // any other compilers require anything like that?
 #endif
-#else
-#define LAZPERF_EXPORT 
+
+#ifndef LAZPERF_EXPORT
+    #define LAZPERF_EXPORT // so it doesn't fail being undefined
 #endif
+
+#endif // LAZPERF_BASE_HPP
diff --git a/cpp/test/CMakeLists.txt b/cpp/test/CMakeLists.txt
index a907a8c..3e6dc33 100644
--- a/cpp/test/CMakeLists.txt
+++ b/cpp/test/CMakeLists.txt
@@ -2,7 +2,7 @@
 macro(LAZPERF_ADD_TEST _name)
   add_executable(${_name} ${_name}.cpp)
   target_link_libraries(${_name}  GTest::gtest
-            GTest::gtest_main  ${LAZPERF_STATIC_LIB})
+            GTest::gtest_main  ${PROJECT_NAME})
   target_include_directories(${_name} PRIVATE ${GTEST_DIR}/include)
   target_include_directories(${_name} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/..)
   target_include_directories(${_name} PRIVATE ${CMAKE_CURRENT_BINARY_DIR})
diff --git a/cpp/tools/CMakeLists.txt b/cpp/tools/CMakeLists.txt
index 2ffc81a..c4a24ed 100644
--- a/cpp/tools/CMakeLists.txt
+++ b/cpp/tools/CMakeLists.txt
@@ -3,5 +3,5 @@ add_executable(random random.cpp)
 
 target_include_directories(random PRIVATE ../lazperf)
 lazperf_target_compile_settings(random)
-target_link_libraries(random PRIVATE ${LAZPERF_STATIC_LIB})
+target_link_libraries(random PRIVATE ${PROJECT_NAME})
 
