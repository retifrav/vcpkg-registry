diff --git a/libgeotiff/CMakeLists.txt b/libgeotiff/CMakeLists.txt
index 0216ead..caa1e58 100644
--- a/libgeotiff/CMakeLists.txt
+++ b/libgeotiff/CMakeLists.txt
@@ -5,14 +5,14 @@
 # Author: Mateusz Loskot <mateusz@loskot.net>
 #
 ###############################################################################
-CMAKE_MINIMUM_REQUIRED(VERSION 3.13)
+CMAKE_MINIMUM_REQUIRED(VERSION 3.22)
 
-PROJECT(GeoTIFF)
+PROJECT(geotiff)
 
 include(GNUInstallDirs)
 
-SET(GEOTIFF_LIB_NAME geotiff)
-SET(GEOTIFF_LIBRARY_TARGET geotiff_library)
+SET(GEOTIFF_LIB_NAME ${PROJECT_NAME})
+SET(GEOTIFF_LIBRARY_TARGET ${GEOTIFF_LIB_NAME})
 
 ##############################################################################
 # CMake settings
@@ -102,14 +102,10 @@ endif (MSVC)
 ###############################################################################
 # Search for dependencies
 
-
 # TIFF support - required, default=ON
 option(WITH_TIFF "Choose if TIFF support should be built" ON)
 
-FIND_PACKAGE(PROJ NO_MODULE QUIET)
-if (NOT PROJ_FOUND)
-  FIND_PACKAGE(PROJ REQUIRED)
-endif ()
+find_package(PROJ CONFIG REQUIRED)
 
 # Zlib support - optional, default=OFF
 option(WITH_ZLIB "Choose if zlib support should be built" OFF)
@@ -117,7 +113,6 @@ option(WITH_ZLIB "Choose if zlib support should be built" OFF)
 # JPEG support - optional, default=OFF
 option(WITH_JPEG  "Choose if JPEG support should be built" OFF)
 
-
 # Turn off TOWGS84 support
 option(WITH_TOWGS84 "Build with TOWGS84 support" ON)
 IF (NOT WITH_TOWGS84)
@@ -135,7 +130,6 @@ INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_BINARY_DIR})
 
 MESSAGE(STATUS "Generating geo_config.h header - done")
 
-
 ###############################################################################
 # Installation settings
 
@@ -181,10 +175,6 @@ if(BUILD_MAN)
   INSTALL(FILES ${GEOTIFF_MAN_PAGES} DESTINATION ${CMAKE_INSTALL_MANDIR}/man1)
 endif ()
 
-# Install header files for development distribution
-INSTALL(FILES ${GEOTIFF_LIB_HEADERS} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
-
-
 ###############################################################################
 # Build libgeotiff library
 
@@ -206,11 +196,11 @@ SET(GEOTIFF_LIB_SOURCES
 
 SET(XTIFF_SOURCES libxtiff/xtiff.c)
 
-if (MSVC OR CMAKE_CONFIGURATION_TYPES)
+#if (MSVC OR CMAKE_CONFIGURATION_TYPES)
   # For multi-config systems and for Visual Studio, the debug versions
   # of the libraries have a _d suffix.
-  set (CMAKE_DEBUG_POSTFIX _d)
-endif ()
+  set (CMAKE_DEBUG_POSTFIX d)
+#endif ()
 
 ADD_LIBRARY(${GEOTIFF_LIBRARY_TARGET}
     ${GEOTIFF_LIB_SOURCES} ${XTIFF_SOURCES})
@@ -221,63 +211,26 @@ set_property(TARGET ${GEOTIFF_LIBRARY_TARGET} PROPERTY POSITION_INDEPENDENT_CODE
 set_property(TARGET ${GEOTIFF_LIBRARY_TARGET} PROPERTY OUTPUT_NAME ${GEOTIFF_LIB_NAME})
 
 IF(WITH_JPEG)
-    FIND_PACKAGE(JPEG NO_MODULE QUIET)
-    if (NOT JPEG_FOUND)
-      FIND_PACKAGE(JPEG)
-    endif ()
-
-    IF(JPEG_FOUND)
-        SET(HAVE_JPEG 1)
-        TARGET_INCLUDE_DIRECTORIES(${GEOTIFF_LIBRARY_TARGET} PRIVATE ${JPEG_INCLUDE_DIR})
-        target_compile_definitions(${GEOTIFF_LIBRARY_TARGET} PRIVATE -DHAVE_JPEG=${HAVE_JPEG})
-    ENDIF()
+    find_package(jpeg-turbo CONFIG REQUIRED)
+    set(HAVE_JPEG 1)
+    target_compile_definitions(${GEOTIFF_LIBRARY_TARGET} PRIVATE -DHAVE_JPEG=${HAVE_JPEG})
 ENDIF()
 
-
 IF(WITH_TIFF)
-    FIND_PACKAGE(TIFF NO_MODULE QUIET)
-    if (NOT TIFF_FOUND)
-      FIND_PACKAGE(TIFF REQUIRED)
-    endif ()
-
-    IF(TIFF_FOUND)
-        # Confirm required API is available
-        INCLUDE(CheckFunctionExists)
-        SET(CMAKE_REQUIRED_LIBRARIES ${TIFF_LIBRARIES})
-
-        CHECK_FUNCTION_EXISTS(TIFFOpen HAVE_TIFFOPEN)
-        IF(NOT HAVE_TIFFOPEN)
-            SET(TIFF_FOUND) # ReSET to NOT found for TIFF library
-            MESSAGE(FATAL_ERROR "Failed to link with libtiff - TIFFOpen function not found")
-        ENDIF()
-
-        CHECK_FUNCTION_EXISTS(TIFFMergeFieldInfo HAVE_TIFFMERGEFIELDINFO)
-        IF(NOT HAVE_TIFFMERGEFIELDINFO)
-            SET(TIFF_FOUND) # ReSET to NOT found for TIFF library
-            MESSAGE(FATAL_ERROR "Failed to link with libtiff - TIFFMergeFieldInfo function not found. libtiff 3.6.0 Beta or later required. Please upgrade or use an older version of libgeotiff")
-        ENDIF()
-
-        TARGET_INCLUDE_DIRECTORIES(${GEOTIFF_LIBRARY_TARGET} PRIVATE ${TIFF_INCLUDE_DIR})
-        TARGET_COMPILE_DEFINITIONS(${GEOTIFF_LIBRARY_TARGET} PRIVATE -DHAVE_TIFF=1)
-    ENDIF(TIFF_FOUND)
-ENDIF(WITH_TIFF)
+    find_package(tiff CONFIG REQUIRED)
+    target_compile_definitions(${GEOTIFF_LIBRARY_TARGET} PRIVATE -DHAVE_TIFF=1)
+ENDIF()
 
 IF(WITH_ZLIB)
-    FIND_PACKAGE(ZLIB REQUIRED )
-    IF(ZLIB_FOUND)
-        SET(HAVE_ZIP 1)
-        TARGET_INCLUDE_DIRECTORIES(${GEOTIFF_LIBRARY_TARGET} PRIVATE ${ZLIB_INCLUDE_DIR})
-        TARGET_COMPILE_DEFINITIONS(${GEOTIFF_LIBRARY_TARGET} PRIVATE -DHAVE_ZIP=${HAVE_ZIP})
-    ENDIF()
+    find_package(zlib CONFIG REQUIRED)
+    SET(HAVE_ZIP 1)
+    target_compile_definitions(${GEOTIFF_LIBRARY_TARGET} PRIVATE -DHAVE_ZIP=${HAVE_ZIP})
 ENDIF()
 
 TARGET_INCLUDE_DIRECTORIES(${GEOTIFF_LIBRARY_TARGET} PUBLIC
                             $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/>
                             $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/libxtiff>
                             $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
-IF(WIN32 AND MSVC)
-    SET_TARGET_PROPERTIES(${GEOTIFF_LIBRARY_TARGET} PROPERTIES IMPORT_SUFFIX "${INTERFACE_LIB_PREFIX}.lib")
-ENDIF(WIN32 AND MSVC)
 
 # Unix, linux:
 if(UNIX)
@@ -320,68 +273,54 @@ IF(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
     ENDIF()
 ENDIF()
 
-
-set(CONFIG_PUBLIC_DEPENDENCIES "")
-set(CONFIG_PRIVATE_DEPENDENCIES "")
-if(TARGET TIFF::TIFF)
-    set(TIFF_LIBRARIES TIFF::TIFF)
-    string(APPEND CONFIG_PUBLIC_DEPENDENCIES "find_dependency(TIFF)\n")
-endif()
-target_link_libraries(${GEOTIFF_LIBRARY_TARGET} PUBLIC
-    ${TIFF_LIBRARIES})
-
-if(TARGET PROJ::proj)
-    set(PROJ_LIBRARIES PROJ::proj)
-    string(APPEND CONFIG_PRIVATE_DEPENDENCIES "  find_dependency(PROJ)\n")
-endif()
-
-if(TARGET ZLIB::zlib)
-    set(ZLIB_LIBRARIES ZLIB::zlib)
-    string(APPEND CONFIG_PRIVATE_DEPENDENCIES "  find_dependency(ZLIB)\n")
+target_link_libraries(${GEOTIFF_LIBRARY_TARGET}
+    PRIVATE
+        PROJ::proj
+)
+if(WITH_TIFF)
+    target_link_libraries(${GEOTIFF_LIBRARY_TARGET}
+        PRIVATE
+            TIFF::tiff
+    )
 endif()
 
-target_link_libraries(${GEOTIFF_LIBRARY_TARGET} PRIVATE
-                      ${PROJ_LIBRARIES}
-                      ${TIFF_LIBRARIES}
-                      ${ZLIB_LIBRARIES})
-
-target_include_directories( ${GEOTIFF_LIBRARY_TARGET} PUBLIC
-            $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}>
-            $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
-
-INSTALL( TARGETS ${GEOTIFF_LIBRARY_TARGET}
-     EXPORT depends
-     RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
-     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-     PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
-     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} )
-
-IF (MSVC)
-IF (BUILD_SHARED_LIBS)
-    INSTALL(FILES $<TARGET_PDB_FILE:${GEOTIFF_LIBRARY_TARGET}> DESTINATION ${CMAKE_INSTALL_BINDIR} OPTIONAL)
-ENDIF (BUILD_SHARED_LIBS)
-ENDIF (MSVC)
-
-# Install libgeotiff.pc
-set(prefix "${CMAKE_INSTALL_PREFIX}")
-set(exec_prefix "\${prefix}")
-if(IS_ABSOLUTE "${CMAKE_INSTALL_LIBDIR}")
-    set(libdir "${CMAKE_INSTALL_LIBDIR}")
-else()
-    set(libdir "\${exec_prefix}/${CMAKE_INSTALL_LIBDIR}")
-endif()
-if(IS_ABSOLUTE "${CMAKE_INSTALL_INCLUDEDIR}")
-    set(includedir "${CMAKE_INSTALL_INCLUDEDIR}")
-else()
-    set(includedir "\${prefix}/${CMAKE_INSTALL_INCLUDEDIR}")
-endif()
-SET(PACKAGE_NAME ${PROJECT_NAME})
-SET(VERSION ${PROJECT_VERSION})
-configure_file(libgeotiff.pc.in ${CMAKE_CURRENT_BINARY_DIR}/libgeotiff.pc @ONLY)
-
-INSTALL(
-    FILES ${CMAKE_CURRENT_BINARY_DIR}/libgeotiff.pc
-    DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
+target_include_directories(${GEOTIFF_LIBRARY_TARGET}
+    PRIVATE
+        ${CMAKE_CURRENT_SOURCE_DIR}
+    PUBLIC
+        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
+        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
+)
+
+set_target_properties(${GEOTIFF_LIBRARY_TARGET} PROPERTIES PUBLIC_HEADER "${GEOTIFF_LIB_HEADERS}")
+
+install(TARGETS ${GEOTIFF_LIBRARY_TARGET}
+    EXPORT "${GEOTIFF_LIBRARY_TARGET}Targets"
+    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${GEOTIFF_LIBRARY_TARGET}
+    INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
+)
+# generate and install export file
+install(EXPORT "${GEOTIFF_LIBRARY_TARGET}Targets"
+    FILE "${GEOTIFF_LIBRARY_TARGET}Targets.cmake"
+    DESTINATION "share/${GEOTIFF_LIBRARY_TARGET}"
+)
+
+include(CMakePackageConfigHelpers)
+
+# create config file
+configure_package_config_file(${CMAKE_CURRENT_SOURCE_DIR}/Config.cmake.in
+    "${CMAKE_CURRENT_BINARY_DIR}/${GEOTIFF_LIBRARY_TARGET}Config.cmake"
+    INSTALL_DESTINATION "share/${GEOTIFF_LIBRARY_TARGET}"
+)
+# install config files
+install(FILES
+    "${CMAKE_CURRENT_BINARY_DIR}/${GEOTIFF_LIBRARY_TARGET}Config.cmake"
+    DESTINATION "share/${GEOTIFF_LIBRARY_TARGET}"
+)
+# generate the export targets for the build tree
+export(EXPORT "${GEOTIFF_LIBRARY_TARGET}Targets"
+    FILE "${CMAKE_CURRENT_BINARY_DIR}/cmake/${GEOTIFF_LIBRARY_TARGET}Targets.cmake"
+)
 
 # Define grouping of source files in PROJECT file (e.g. Visual Studio)
 SOURCE_GROUP("CMake Files" FILES CMakeLists.txt)
@@ -395,8 +334,6 @@ IF(WITH_UTILITIES)
     ADD_SUBDIRECTORY(bin)
 ENDIF()
 
-ADD_SUBDIRECTORY(cmake)
-
 message(STATUS "
 ################################
 Summary of build options:
diff --git a/libgeotiff/bin/CMakeLists.txt b/libgeotiff/bin/CMakeLists.txt
index 87957b1..18821c5 100644
--- a/libgeotiff/bin/CMakeLists.txt
+++ b/libgeotiff/bin/CMakeLists.txt
@@ -23,14 +23,33 @@ MESSAGE(STATUS "Adding GeoTIFF utilities to build")
 FOREACH(utility ${GEOTIFF_UTILITIES})
     ADD_EXECUTABLE(${utility} ${utility}.c ${GETOPT_SOURCE})
     TARGET_LINK_LIBRARIES(${utility} PRIVATE ${GEOTIFF_LIBRARY_TARGET})
+    if(WITH_TIFF)
+        target_link_libraries(${utility}
+            PRIVATE
+                TIFF::tiff
+        )
+    endif()
 ENDFOREACH()
 
 ADD_EXECUTABLE(geotifcp geotifcp.c ${GETOPT_SOURCE})
 TARGET_LINK_LIBRARIES(geotifcp
     PRIVATE
     ${GEOTIFF_LIBRARY_TARGET}
-    ${JPEG_LIBRARIES}
-    ${ZLIB_LIBRARIES})
+)
+if(WITH_TIFF)
+    target_link_libraries(geotifcp
+        PRIVATE
+            TIFF::tiff
+    )
+endif()
+
+if(WITH_JPEG)
+    target_link_libraries(geotifcp PRIVATE jpeg-turbo::turbojpeg)
+endif()
+
+if(WITH_ZLIB)
+    target_link_libraries(geotifcp PRIVATE zlib)
+endif()
 
 SET(GEOTIFF_UTILITIES ${GEOTIFF_UTILITIES} geotifcp )
 
diff --git a/libgeotiff/bin/listgeo.c b/libgeotiff/bin/listgeo.c
index 6e68616..38d2621 100644
--- a/libgeotiff/bin/listgeo.c
+++ b/libgeotiff/bin/listgeo.c
@@ -11,7 +11,7 @@
 #include "geo_normalize.h"
 #include "geo_simpletags.h"
 #include "geovalues.h"
-#include "tiffio.h"
+#include <tiff/tiffio.h>
 #include "cpl_serv.h"
 #include <stdio.h>
 
diff --git a/libgeotiff/geo_free.c b/libgeotiff/geo_free.c
index 0edf557..80c0f8d 100644
--- a/libgeotiff/geo_free.c
+++ b/libgeotiff/geo_free.c
@@ -15,7 +15,7 @@
 #include "geo_tiffp.h" /* external TIFF interface */
 #include "geo_keyp.h"  /* private interface       */
 
-#include "proj.h"
+#include <proj/proj.h>
 
 /**********************************************************************
  *
diff --git a/libgeotiff/geo_keyp.h b/libgeotiff/geo_keyp.h
index c13f2ec..e2c34dc 100644
--- a/libgeotiff/geo_keyp.h
+++ b/libgeotiff/geo_keyp.h
@@ -15,7 +15,7 @@
 
 #include <stdlib.h> /* for size_t */
 
-#include "proj.h"
+#include <proj/proj.h>
 
 /*
  * This structure contains the internal program
diff --git a/libgeotiff/geo_names.c b/libgeotiff/geo_names.c
index c7e148d..757cbbb 100644
--- a/libgeotiff/geo_names.c
+++ b/libgeotiff/geo_names.c
@@ -18,7 +18,7 @@
 #include "geo_tiffp.h" /* for tag names */
 #include "geo_keyp.h"
 
-#include "proj.h"
+#include <proj/proj.h>
 
 static const KeyInfo _formatInfo[] =  {
    {TYPE_BYTE,    "Byte"},
diff --git a/libgeotiff/geo_normalize.c b/libgeotiff/geo_normalize.c
index f16b67b..ca16a38 100644
--- a/libgeotiff/geo_normalize.c
+++ b/libgeotiff/geo_normalize.c
@@ -39,7 +39,7 @@
 #include "geo_normalize.h"
 #include "geo_keyp.h"
 
-#include "proj.h"
+#include <proj/proj.h>
 
 #ifndef KvUserDefined
 #  define KvUserDefined 32767
diff --git a/libgeotiff/geotiff_proj4.c b/libgeotiff/geotiff_proj4.c
index 2cb3bd8..11ce944 100644
--- a/libgeotiff/geotiff_proj4.c
+++ b/libgeotiff/geotiff_proj4.c
@@ -21,7 +21,7 @@
 #include "geo_normalize.h"
 #include "geovalues.h"
 #include "geo_tiffp.h"
-#include "proj.h"
+#include <proj/proj.h>
 
 /************************************************************************/
 /*                    GTIFProj4AppendEllipsoid()                        */
diff --git a/libgeotiff/libxtiff/xtiffio.h b/libgeotiff/libxtiff/xtiffio.h
index cb09435..0f3ee82 100644
--- a/libgeotiff/libxtiff/xtiffio.h
+++ b/libgeotiff/libxtiff/xtiffio.h
@@ -7,7 +7,7 @@
 #ifndef LIBGEOTIFF_XTIFFIO_H_
 #define LIBGEOTIFF_XTIFFIO_H_
 
-#include "tiffio.h"
+#include <tiff/tiffio.h>
 #include "geo_config.h"
 
 /**
