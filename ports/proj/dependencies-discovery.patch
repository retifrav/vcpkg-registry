diff --git a/CMakeLists.txt b/CMakeLists.txt
index 3fa3ec68..3902c7ec 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -167,7 +167,7 @@ set_property(CACHE NLOHMANN_JSON_ORIGIN PROPERTY STRINGS auto internal external)
 set(MIN_NLOHMANN_JSON_VERSION 3.7.0)
 
 if(NLOHMANN_JSON_ORIGIN STREQUAL "external")
-  find_package(nlohmann_json REQUIRED)
+  find_package(nlohmann_json CONFIG REQUIRED)
   set(NLOHMANN_JSON "external")
 elseif(NLOHMANN_JSON_ORIGIN STREQUAL "internal")
   set(NLOHMANN_JSON "internal")
@@ -212,11 +212,14 @@ if(DEFINED SQLITE3_LIBRARY)
   set(SQLite3_LIBRARY ${SQLITE3_LIBRARY})
 endif()
 
-find_package(SQLite3 REQUIRED)
+find_package(SQLite3 CONFIG REQUIRED)
+#if(NOT SQLITE3_FOUND) # it is REQUIRED
+#  message(SEND_ERROR "sqlite3 dependency not found!")
+#endif()
 
 # Would build and run with older versions, but with horrible performance
 # See https://github.com/OSGeo/PROJ/issues/1718
-if(SQLite3_VERSION VERSION_LESS "3.11")
+if("${SQLite3_VERSION}" VERSION_LESS "3.11")
   message(SEND_ERROR "SQLite3 >= 3.11 required!")
 endif()
 
@@ -228,13 +231,13 @@ option(ENABLE_TIFF "Enable TIFF support to read some grids" ON)
 mark_as_advanced(ENABLE_TIFF)
 set(TIFF_ENABLED FALSE)
 if(ENABLE_TIFF)
-  find_package(TIFF REQUIRED)
-  if(TIFF_FOUND)
+  find_package(tiff CONFIG REQUIRED)
+  # if(TIFF_FOUND) # it is REQUIRED
     set(TIFF_ENABLED TRUE)
-  else()
-    message(SEND_ERROR
-      "libtiff dependency not found! Use ENABLE_TIFF=OFF to force it off")
-  endif()
+  # else()
+  #   message(SEND_ERROR
+  #     "libtiff dependency not found! Use ENABLE_TIFF=OFF to force it off")
+  # endif()
 else()
   message(WARNING
     "TIFF support is not enabled and will result in the inability to read "
@@ -248,8 +251,8 @@ endif()
 option(ENABLE_CURL "Enable Curl support" ON)
 set(CURL_ENABLED FALSE)
 if(ENABLE_CURL)
-  find_package(CURL REQUIRED)
-  if(CURL_FOUND)
+  find_package(curl CONFIG REQUIRED)
+  # if(CURL_FOUND) # it is REQUIRED
     set(CURL_ENABLED TRUE)
 
     # Curl SSL options are described in
@@ -258,9 +261,9 @@ if(ENABLE_CURL)
     #set(SSL_OPTIONS ${CURLSSLOPT_NO_REVOKE})
     #add_compile_definitions(SSL_OPTIONS=${SSL_OPTIONS})
 
-  else()
-    message(SEND_ERROR "curl dependency not found!")
-  endif()
+  # else()
+  #   message(SEND_ERROR "curl dependency not found!")
+  # endif()
 endif()
 
 ################################################################################
diff --git a/cmake/project-config.cmake.in b/cmake/project-config.cmake.in
index 0ca48aaa..d57838a0 100644
--- a/cmake/project-config.cmake.in
+++ b/cmake/project-config.cmake.in
@@ -27,23 +27,23 @@ if("@CURL_ENABLED@")
 endif()
 cmake_policy(POP)
 
-find_dependency(SQLite3)
+find_dependency(SQLite3 CONFIG REQUIRED)
 
 if(DEFINED PROJ_CONFIG_FIND_TIFF_DEP)
-    find_dependency(TIFF)
+    find_dependency(tiff CONFIG REQUIRED)
 endif()
 
 if(DEFINED PROJ_CONFIG_FIND_CURL_DEP)
   # Chainload CURL usage requirements
-  find_dependency(CURL)
+  find_dependency(curl CONFIG REQUIRED)
   # Target CURL::libcurl only defined since CMake 3.12
-  if(NOT TARGET CURL::libcurl)
-      add_library(CURL::libcurl INTERFACE IMPORTED)
-      set_target_properties(CURL::libcurl PROPERTIES
-        INTERFACE_INCLUDE_DIRECTORIES "${CURL_INCLUDE_DIRS}"
-        INTERFACE_LINK_LIBRARIES      "${CURL_LIBRARIES}"
-      )
-  endif()
+  # if(NOT TARGET CURL::libcurl)
+  #     add_library(CURL::libcurl INTERFACE IMPORTED)
+  #     set_target_properties(CURL::libcurl PROPERTIES
+  #       INTERFACE_INCLUDE_DIRECTORIES "${CURL_INCLUDE_DIRS}"
+  #       INTERFACE_LINK_LIBRARIES      "${CURL_LIBRARIES}"
+  #     )
+  # endif()
 endif()
 
 function(set_variable_from_rel_or_absolute_path var root rel_or_abs_path)
diff --git a/src/grids.cpp b/src/grids.cpp
index d61e85b4..eb1aab56 100644
--- a/src/grids.cpp
+++ b/src/grids.cpp
@@ -38,7 +38,7 @@
 #include "proj_internal.h"
 
 #ifdef TIFF_ENABLED
-#include "tiffio.h"
+#include <tiff/tiffio.h>
 #endif
 
 #include <algorithm>
diff --git a/src/iso19111/factory.cpp b/src/iso19111/factory.cpp
index 5b4bfc4e..ac3cdc13 100644
--- a/src/iso19111/factory.cpp
+++ b/src/iso19111/factory.cpp
@@ -74,7 +74,7 @@
 #include "proj_internal.h"
 // clang-format on
 
-#include <sqlite3.h>
+#include <sqlite3/sqlite3.h>
 
 // Custom SQLite VFS as our database is not supposed to be modified in
 // parallel. This is slightly faster
diff --git a/src/iso19111/internal.cpp b/src/iso19111/internal.cpp
index c6ba11c7..728ec300 100644
--- a/src/iso19111/internal.cpp
+++ b/src/iso19111/internal.cpp
@@ -46,7 +46,7 @@
 #include <sstream> // std::istringstream and std::ostringstream
 #include <string>
 
-#include "sqlite3.h"
+#include <sqlite3/sqlite3.h>
 
 NS_PROJ_START
 
diff --git a/src/lib_proj.cmake b/src/lib_proj.cmake
index 8e3b88a6..fc11fc4e 100644
--- a/src/lib_proj.cmake
+++ b/src/lib_proj.cmake
@@ -462,7 +462,7 @@ if(Threads_FOUND AND CMAKE_USE_PTHREADS_INIT)
   target_link_libraries(proj PRIVATE ${CMAKE_THREAD_LIBS_INIT})
 endif()
 
-target_link_libraries(proj PRIVATE SQLite::SQLite3)
+target_link_libraries(proj PRIVATE SQLite3)
 
 if(NLOHMANN_JSON STREQUAL "external")
   target_compile_definitions(proj PRIVATE EXTERNAL_NLOHMANN_JSON)
@@ -472,12 +472,12 @@ endif()
 
 if(TIFF_ENABLED)
   target_compile_definitions(proj PRIVATE -DTIFF_ENABLED)
-  target_link_libraries(proj PRIVATE TIFF::TIFF)
+  target_link_libraries(proj PRIVATE TIFF::tiff)
 endif()
 
 if(CURL_ENABLED)
   target_compile_definitions(proj PRIVATE -DCURL_ENABLED)
-  target_link_libraries(proj PRIVATE CURL::libcurl)
+  target_link_libraries(proj PRIVATE CURL::curl)
   target_link_libraries(proj
     PRIVATE
       $<$<CXX_COMPILER_ID:MSVC>:ws2_32>
diff --git a/src/networkfilemanager.cpp b/src/networkfilemanager.cpp
index bec611f6..e6c647fa 100644
--- a/src/networkfilemanager.cpp
+++ b/src/networkfilemanager.cpp
@@ -51,7 +51,7 @@
 
 #ifdef CURL_ENABLED
 #include <curl/curl.h>
-#include <sqlite3.h> // for sqlite3_snprintf
+#include <sqlite3/sqlite3.h> // for sqlite3_snprintf
 #endif
 
 #include <sys/stat.h>
diff --git a/src/proj_json_streaming_writer.cpp b/src/proj_json_streaming_writer.cpp
index a6052225..95edd48f 100644
--- a/src/proj_json_streaming_writer.cpp
+++ b/src/proj_json_streaming_writer.cpp
@@ -35,7 +35,7 @@
 #include "proj_json_streaming_writer.hpp"
 
 #include <cmath>
-#include <sqlite3.h>
+#include <sqlite3/sqlite3.h>
 #include <stdarg.h>
 #include <string.h>
 #define CPLAssert(x)                                                           \
diff --git a/src/sqlite3_utils.hpp b/src/sqlite3_utils.hpp
index 42ec33af..8359e426 100644
--- a/src/sqlite3_utils.hpp
+++ b/src/sqlite3_utils.hpp
@@ -30,7 +30,7 @@
 
 #include <memory>
 
-#include <sqlite3.h>
+#include <sqlite3/sqlite3.h>
 
 #include "proj.h"
 #include "proj/util.hpp"
diff --git a/test/unit/CMakeLists.txt b/test/unit/CMakeLists.txt
index 1205b82f..bbf82ef5 100644
--- a/test/unit/CMakeLists.txt
+++ b/test/unit/CMakeLists.txt
@@ -169,7 +169,7 @@ add_executable(test_network
   test_network.cpp)
 if(CURL_ENABLED)
   target_compile_definitions(test_network PRIVATE -DCURL_ENABLED)
-  target_link_libraries(test_network PRIVATE CURL::libcurl)
+  target_link_libraries(test_network PRIVATE CURL::curl)
 endif()
 target_link_libraries(test_network
   PRIVATE GTest::gtest
diff --git a/test/unit/test_c_api.cpp b/test/unit/test_c_api.cpp
index efa5c2db..5396ecc2 100644
--- a/test/unit/test_c_api.cpp
+++ b/test/unit/test_c_api.cpp
@@ -45,7 +45,7 @@
 #include "proj/metadata.hpp"
 #include "proj/util.hpp"
 
-#include <sqlite3.h>
+#include <sqlite3/sqlite3.h>
 
 #if !defined(_WIN32)
 #include <sys/resource.h>
diff --git a/test/unit/test_factory.cpp b/test/unit/test_factory.cpp
index 8f885425..7a7277a9 100644
--- a/test/unit/test_factory.cpp
+++ b/test/unit/test_factory.cpp
@@ -42,7 +42,7 @@
 
 #include <algorithm>
 
-#include <sqlite3.h>
+#include <sqlite3/sqlite3.h>
 
 #ifdef _MSC_VER
 #include <stdio.h>
diff --git a/test/unit/test_network.cpp b/test/unit/test_network.cpp
index e5a3946f..1c61de16 100644
--- a/test/unit/test_network.cpp
+++ b/test/unit/test_network.cpp
@@ -35,7 +35,7 @@
 #include "proj_internal.h"
 #include <proj.h>
 
-#include <sqlite3.h>
+#include <sqlite3/sqlite3.h>
 #include <time.h>
 
 #ifdef CURL_ENABLED
